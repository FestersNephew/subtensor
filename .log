warning: unneeded unit expression
   --> pallets/commitments/src/lib.rs:304:21
    |
304 |                     ()
    |                     ^^ help: remove the final `()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unused_unit
    = note: `#[warn(clippy::unused_unit)]` on by default

warning: casting to the same type is unnecessary (`usize` -> `usize`)
  --> pallets/commitments/src/types.rs:87:33
   |
87 |                 r[1..].copy_from_slice(&x[..l as usize]);
   |                                             ^^^^^^^^^^ help: try: `l`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast
   = note: `#[warn(clippy::unnecessary_cast)]` on by default

warning: passing a unit value to a function
   --> pallets/commitments/src/lib.rs:152:4
    |
152 |             Ok(().into())
    |             ^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unit_arg
    = note: `#[warn(clippy::unit_arg)]` on by default
help: move the expression in front of the call and replace it with the unit literal `()`
    |
152 ~             ().into();
153 +    Ok(())
    |

warning: useless conversion to the same type: `()`
   --> pallets/commitments/src/lib.rs:152:7
    |
152 |             Ok(().into())
    |                ^^^^^^^^^ help: consider removing `.into()`: `()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_conversion
    = note: `#[warn(clippy::useless_conversion)]` on by default

warning: this `impl` can be derived
   --> pallets/commitments/src/lib.rs:174:1
    |
174 | / impl Default for CallType {
175 | |     fn default() -> Self {
176 | |         CallType::Other
177 | |     }
178 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#derivable_impls
    = note: `#[warn(clippy::derivable_impls)]` on by default
    = help: remove the manual implementation...
help: ...and instead derive it...
    |
170 + #[derive(Default)]
171 | pub enum CallType {
    |
help: ...and mark the default variant
    |
172 ~     #[default]
173 ~     Other,
    |

warning: you should consider adding a `Default` implementation for `CommitmentsSignedExtension<T>`
   --> pallets/commitments/src/lib.rs:218:5
    |
218 | /     pub fn new() -> Self {
219 | |         Self(Default::default())
220 | |     }
    | |_____^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default
    = note: `#[warn(clippy::new_without_default)]` on by default
help: try adding this
    |
213 + impl<T: Config + Send + Sync + TypeInfo> Default for CommitmentsSignedExtension<T>
214 + where
215 +     T::RuntimeCall: Dispatchable<Info = DispatchInfo, PostInfo = PostDispatchInfo>,
216 +     <T as frame_system::Config>::RuntimeCall: IsSubType<Call<T>>,
217 +  {
218 +     fn default() -> Self {
219 +         Self::new()
220 +     }
221 + }
    |

warning: unneeded `return` statement
   --> pallets/commitments/src/lib.rs:225:9
    |
225 |         return u64::max_value();
    |         ^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return
    = note: `#[warn(clippy::needless_return)]` on by default
help: remove `return`
    |
225 -         return u64::max_value();
225 +         u64::max_value()
    |

warning: this match could be replaced by its scrutinee and body
   --> pallets/commitments/src/lib.rs:266:9
    |
266 | /         match call.is_sub_type() {
267 | |             _ => Ok(ValidTransaction {
268 | |                 priority: Self::get_priority_vanilla(),
269 | |                 ..Default::default()
270 | |             }),
271 | |         }
    | |_________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_single_binding
    = note: `#[warn(clippy::match_single_binding)]` on by default
help: consider using the scrutinee and body instead
    |
266 ~         call.is_sub_type();
267 +         Ok(ValidTransaction {
268 +             priority: Self::get_priority_vanilla(),
269 +             ..Default::default()
270 +         })
    |

warning: this match could be replaced by its body itself
   --> pallets/commitments/src/lib.rs:302:13
    |
302 | /             match call_type {
303 | |                 _ => {
304 | |                     ()
305 | |                 }
306 | |             }
    | |_____________^ help: consider using the match body instead: `()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_single_binding

warning: method `fields` is never used
   --> pallets/registry/src/types.rs:320:16
    |
319 | impl<FieldLimit: Get<u32>> IdentityInfo<FieldLimit> {
    | --------------------------------------------------- method in this implementation
320 |     pub(crate) fn fields(&self) -> IdentityFields {
    |                   ^^^^^^
    |
    = note: `#[warn(dead_code)]` on by default

warning: casting to the same type is unnecessary (`usize` -> `usize`)
  --> pallets/registry/src/types.rs:89:33
   |
89 |                 r[1..].copy_from_slice(&x[..l as usize]);
   |                                             ^^^^^^^^^^ help: try: `l`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast
   = note: `#[warn(clippy::unnecessary_cast)]` on by default

warning: casting to the same type is unnecessary (`u64` -> `u64`)
   --> pallets/registry/src/types.rs:249:48
    |
249 |         Ok(Self(<BitFlags<IdentityField>>::from_bits(field as u64).map_err(|_| "invalid value")?))
    |                                                      ^^^^^^^^^^^^ help: try: `field`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast

warning: passing a unit value to a function
   --> pallets/registry/src/lib.rs:128:4
    |
128 |             Ok(().into())
    |             ^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unit_arg
    = note: `#[warn(clippy::unit_arg)]` on by default
help: move the expression in front of the call and replace it with the unit literal `()`
    |
128 ~             ().into();
129 +    Ok(())
    |

warning: useless conversion to the same type: `()`
   --> pallets/registry/src/lib.rs:128:7
    |
128 |             Ok(().into())
    |                ^^^^^^^^^ help: consider removing `.into()`: `()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_conversion
    = note: `#[warn(clippy::useless_conversion)]` on by default

warning: `pallet-commitments` (lib) generated 9 warnings (run `cargo clippy --fix --lib -p pallet-commitments` to apply 8 suggestions)
warning: `pallet-registry` (lib) generated 5 warnings (run `cargo clippy --fix --lib -p pallet-registry` to apply 4 suggestions)
    Checking pallet-subtensor v4.0.0-dev (/home/marcus/subtensor/pallets/subtensor)
warning: unneeded unit expression
  --> pallets/subtensor/src/block_step.rs:49:21
   |
49 |                     ()
   |                     ^^ help: remove the final `()`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unused_unit
   = note: `#[warn(clippy::unused_unit)]` on by default

warning: unneeded unit expression
   --> pallets/subtensor/src/block_step.rs:409:24
    |
409 |             Err(_) => {()}
    |                        ^^ help: remove the final `()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unused_unit

warning: unneeded unit expression
   --> pallets/subtensor/src/block_step.rs:422:24
    |
422 |             Err(_) => {()}
    |                        ^^ help: remove the final `()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unused_unit

warning: constants have by default a `'static` lifetime
  --> pallets/subtensor/src/registration.rs:59:20
   |
59 | const LOG_TARGET: &'static str = "runtime::subtensor::registration";
   |                   -^^^^^^^---- help: consider removing `'static`: `&str`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#redundant_static_lifetimes
   = note: `#[warn(clippy::redundant_static_lifetimes)]` on by default

warning: this is an `else {..}` but the formatting might hide it
   --> pallets/subtensor/src/weights.rs:142:14
    |
142 |               } else 
    |  ______________^
143 | |             {
    | |____________^
    |
    = note: to remove this lint, remove the `else` or remove the new line between `else` and `{..}`
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#suspicious_else_formatting
    = note: `#[warn(clippy::suspicious_else_formatting)]` on by default

warning: redundant field names in struct initialization
    --> pallets/subtensor/src/lib.rs:1939:21
     |
1939 |                     priority: priority,
     |                     ^^^^^^^^^^^^^^^^^^ help: replace it with: `priority`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#redundant_field_names
     = note: `#[warn(clippy::redundant_field_names)]` on by default

warning: use of deprecated constant `pallet::warnings::UncheckedWeightWitness_0::_w`: 
                 It is deprecated to not check weight witness data.
                 Please instead ensure that all witness data for weight calculation is checked before usage.
         
                 For more info see:
                     <https://github.com/paritytech/polkadot-sdk/pull/1818>
    --> pallets/subtensor/src/lib.rs:1795:13
     |
1795 |             _weight: Weight,
     |             ^^^^^^^
     |
     = note: `#[warn(deprecated)]` on by default

warning: unneeded `return` statement
  --> pallets/subtensor/src/block_step.rs:89:9
   |
89 |         return (tempo as u64) - (block_number + (netuid as u64) + 1) % ((tempo as u64) + 1);
   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return
   = note: `#[warn(clippy::needless_return)]` on by default
help: remove `return`
   |
89 -         return (tempo as u64) - (block_number + (netuid as u64) + 1) % ((tempo as u64) + 1);
89 +         (tempo as u64) - (block_number + (netuid as u64) + 1) % ((tempo as u64) + 1)
   |

warning: unneeded `return` statement
   --> pallets/subtensor/src/block_step.rs:121:9
    |
121 |         return to_sink_via_blocks_until_epoch;
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return
help: remove `return`
    |
121 -         return to_sink_via_blocks_until_epoch;
121 +         to_sink_via_blocks_until_epoch
    |

warning: this expression creates a reference which is immediately dereferenced by the compiler
   --> pallets/subtensor/src/block_step.rs:152:21
    |
152 |                     &hotkey,
    |                     ^^^^^^^ help: change this to: `hotkey`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow
    = note: `#[warn(clippy::needless_borrow)]` on by default

warning: this expression creates a reference which is immediately dereferenced by the compiler
   --> pallets/subtensor/src/block_step.rs:308:56
    |
308 |                 Self::increase_stake_on_hotkey_account(&hotkey, server_emission + validator_emission);
    |                                                        ^^^^^^^ help: change this to: `hotkey`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow

warning: this expression creates a reference which is immediately dereferenced by the compiler
   --> pallets/subtensor/src/block_step.rs:338:17
    |
338 |                 &hotkey,
    |                 ^^^^^^^ help: change this to: `hotkey`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow

warning: this expression creates a reference which is immediately dereferenced by the compiler
   --> pallets/subtensor/src/block_step.rs:356:17
    |
356 |                 &hotkey,
    |                 ^^^^^^^ help: change this to: `hotkey`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow

warning: this expression creates a reference which is immediately dereferenced by the compiler
   --> pallets/subtensor/src/block_step.rs:365:52
    |
365 |             Self::increase_stake_on_hotkey_account(&hotkey, server_emission);
    |                                                    ^^^^^^^ help: change this to: `hotkey`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow

warning: you seem to be trying to use `match` for destructuring a single pattern. Consider using `if let`
   --> pallets/subtensor/src/block_step.rs:400:9
    |
400 | /         match total_coldkey_stake {
401 | |             Ok(amount) => {
402 | |                 let next_amount = amount.saturating_sub(decrement);
403 | |                 if amount > 0 && next_amount > 0 {
...   |
409 | |             Err(_) => {()}
410 | |         }
    | |_________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_match
    = note: `#[warn(clippy::single_match)]` on by default
help: try
    |
400 ~         if let Ok(amount) = total_coldkey_stake {
401 +             let next_amount = amount.saturating_sub(decrement);
402 +             if amount > 0 && next_amount > 0 {
403 +                 TotalColdkeyStake::<T>::set(coldkey, next_amount);
404 +             } else {
405 +                 TotalColdkeyStake::<T>::remove(coldkey);
406 +             }
407 +         }
    |

warning: you seem to be trying to use `match` for destructuring a single pattern. Consider using `if let`
   --> pallets/subtensor/src/block_step.rs:413:9
    |
413 | /         match total_hotkey_stake {
414 | |             Ok(amount) => {
415 | |                 let next_amount = amount.saturating_sub(decrement);
416 | |                 if amount > 0 && next_amount > 0 {
...   |
422 | |             Err(_) => {()}
423 | |         }
    | |_________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_match
help: try
    |
413 ~         if let Ok(amount) = total_hotkey_stake {
414 +             let next_amount = amount.saturating_sub(decrement);
415 +             if amount > 0 && next_amount > 0 {
416 +                 TotalHotkeyStake::<T>::set(hotkey, next_amount);
417 +             } else {
418 +                 TotalHotkeyStake::<T>::remove(hotkey);
419 +             }
420 +         }
    |

warning: unneeded `return` statement
   --> pallets/subtensor/src/block_step.rs:454:9
    |
454 |         return proportional_emission.to_num::<u64>();
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return
help: remove `return`
    |
454 -         return proportional_emission.to_num::<u64>();
454 +         proportional_emission.to_num::<u64>()
    |

warning: unneeded `return` statement
   --> pallets/subtensor/src/block_step.rs:466:13
    |
466 |             return take_emission.to_num::<u64>();
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return
help: remove `return`
    |
466 -             return take_emission.to_num::<u64>();
466 +             take_emission.to_num::<u64>()
    |

warning: unneeded `return` statement
   --> pallets/subtensor/src/block_step.rs:470:13
    |
470 |             return 0;
    |             ^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return
help: remove `return`
    |
470 -             return 0;
470 +             0
    |

warning: `if` chain can be rewritten with `match`
   --> pallets/subtensor/src/block_step.rs:512:21
    |
512 | /                     if pow_registrations_this_interval > burn_registrations_this_interval
513 | |                     {
514 | |                         // A. There are too many registrations this interval and most of them are pow registrations
515 | |                         // this triggers an increase in the pow difficulty.
...   |
569 | |                         );
570 | |                     }
    | |_____________________^
    |
    = help: consider rewriting the `if` chain to use `cmp` and `match`
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#comparison_chain
    = note: `#[warn(clippy::comparison_chain)]` on by default

warning: `if` chain can be rewritten with `match`
   --> pallets/subtensor/src/block_step.rs:575:21
    |
575 | /                     if pow_registrations_this_interval > burn_registrations_this_interval
576 | |                     {
577 | |                         // C. There are not enough registrations this interval and most of them are pow registrations
578 | |                         // this triggers a decrease in the burn cost
...   |
632 | |                         );
633 | |                     }
    | |_____________________^
    |
    = help: consider rewriting the `if` chain to use `cmp` and `match`
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#comparison_chain

warning: unneeded `return` statement
   --> pallets/subtensor/src/block_step.rs:667:13
    |
667 |             return Self::get_max_difficulty(netuid);
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return
help: remove `return`
    |
667 -             return Self::get_max_difficulty(netuid);
667 +             Self::get_max_difficulty(netuid)
    |

warning: unneeded `return` statement
   --> pallets/subtensor/src/block_step.rs:692:13
    |
692 |             return Self::get_max_burn_as_u64(netuid);
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return
help: remove `return`
    |
692 -             return Self::get_max_burn_as_u64(netuid);
692 +             Self::get_max_burn_as_u64(netuid)
    |

warning: unneeded `return` statement
   --> pallets/subtensor/src/epoch.rs:359:9
    |
359 |         return result;
    |         ^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return
help: remove `return`
    |
359 -         return result;
359 +         result
    |

warning: unneeded `return` statement
   --> pallets/subtensor/src/epoch.rs:706:9
    |
706 |         return result;
    |         ^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return
help: remove `return`
    |
706 -         return result;
706 +         result
    |

warning: unneeded `return` statement
  --> pallets/subtensor/src/math.rs:35:5
   |
35 |     return I32F32::from_num(val);
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return
help: remove `return`
   |
35 -     return I32F32::from_num(val);
35 +     I32F32::from_num(val)
   |

warning: unneeded `return` statement
  --> pallets/subtensor/src/math.rs:41:5
   |
41 |     return x.to_num::<u16>();
   |     ^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return
help: remove `return`
   |
41 -     return x.to_num::<u16>();
41 +     x.to_num::<u16>()
   |

warning: unneeded `return` statement
  --> pallets/subtensor/src/math.rs:47:5
   |
47 |     return x.to_num::<u64>();
   |     ^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return
help: remove `return`
   |
47 -     return x.to_num::<u64>();
47 +     x.to_num::<u64>()
   |

warning: unneeded `return` statement
  --> pallets/subtensor/src/math.rs:53:5
   |
53 |     return x.to_num::<u64>();
   |     ^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return
help: remove `return`
   |
53 -     return x.to_num::<u64>();
53 +     x.to_num::<u64>()
   |

warning: unneeded `return` statement
  --> pallets/subtensor/src/math.rs:59:5
   |
59 |     return I32F32::from_num(x);
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return
help: remove `return`
   |
59 -     return I32F32::from_num(x);
59 +     I32F32::from_num(x)
   |

warning: unneeded `return` statement
  --> pallets/subtensor/src/math.rs:65:5
   |
65 |     return I64F64::from_num(x);
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return
help: remove `return`
   |
65 -     return I64F64::from_num(x);
65 +     I64F64::from_num(x)
   |

warning: unneeded `return` statement
  --> pallets/subtensor/src/math.rs:71:5
   |
71 |     return I32F32::from_num(x);
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return
help: remove `return`
   |
71 -     return I32F32::from_num(x);
71 +     I32F32::from_num(x)
   |

warning: unneeded `return` statement
  --> pallets/subtensor/src/math.rs:77:5
   |
77 |     return I32F32::from_num(x) / I32F32::from_num(u16::MAX);
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return
help: remove `return`
   |
77 -     return I32F32::from_num(x) / I32F32::from_num(u16::MAX);
77 +     I32F32::from_num(x) / I32F32::from_num(u16::MAX)
   |

warning: unneeded `return` statement
  --> pallets/subtensor/src/math.rs:83:5
   |
83 |     return fixed_to_u16(x * I32F32::from_num(u16::MAX));
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return
help: remove `return`
   |
83 -     return fixed_to_u16(x * I32F32::from_num(u16::MAX));
83 +     fixed_to_u16(x * I32F32::from_num(u16::MAX))
   |

warning: unneeded `return` statement
 --> pallets/subtensor/src/math_vec.rs:6:5
  |
6 | /     return vec.into_iter()
7 | |         .map(|e| 
8 | |             fixed_to_u64(e)
9 | |         ).collect();
  | |___________________^
  |
  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return
help: remove `return`
  |
6 ~     vec.into_iter()
7 +         .map(|e| 
8 +             fixed_to_u64(e)
9 ~         ).collect()
  |

warning: redundant closure
 --> pallets/subtensor/src/math_vec.rs:7:14
  |
7 |           .map(|e| 
  |  ______________^
8 | |             fixed_to_u64(e)
  | |___________________________^ help: replace the closure with the function itself: `fixed_to_u64`
  |
  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#redundant_closure
  = note: `#[warn(clippy::redundant_closure)]` on by default

warning: unneeded `return` statement
  --> pallets/subtensor/src/math_vec.rs:15:5
   |
15 | /     return vec.into_iter()
16 | |         .map(|e| 
17 | |             fixed64_to_fixed32(e)
18 | |         ).collect();
   | |___________________^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return
help: remove `return`
   |
15 ~     vec.into_iter()
16 +         .map(|e| 
17 +             fixed64_to_fixed32(e)
18 ~         ).collect()
   |

warning: redundant closure
  --> pallets/subtensor/src/math_vec.rs:16:14
   |
16 |           .map(|e| 
   |  ______________^
17 | |             fixed64_to_fixed32(e)
   | |_________________________________^ help: replace the closure with the function itself: `fixed64_to_fixed32`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#redundant_closure

warning: unneeded `return` statement
  --> pallets/subtensor/src/math_vec.rs:24:5
   |
24 | /     return vec.into_iter()
25 | |         .map(|e| 
26 | |             fixed32_to_fixed64(e)
27 | |         ).collect();
   | |___________________^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return
help: remove `return`
   |
24 ~     vec.into_iter()
25 +         .map(|e| 
26 +             fixed32_to_fixed64(e)
27 ~         ).collect()
   |

warning: redundant closure
  --> pallets/subtensor/src/math_vec.rs:25:14
   |
25 |           .map(|e| 
   |  ______________^
26 | |             fixed32_to_fixed64(e)
   | |_________________________________^ help: replace the closure with the function itself: `fixed32_to_fixed64`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#redundant_closure

warning: unneeded `return` statement
  --> pallets/subtensor/src/math_vec.rs:33:5
   |
33 | /     return vec.into_iter()
34 | |         .map(|e| 
35 | |             fixed64_to_u64(e)
36 | |         ).collect();
   | |___________________^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return
help: remove `return`
   |
33 ~     vec.into_iter()
34 +         .map(|e| 
35 +             fixed64_to_u64(e)
36 ~         ).collect()
   |

warning: redundant closure
  --> pallets/subtensor/src/math_vec.rs:34:14
   |
34 |           .map(|e| 
   |  ______________^
35 | |             fixed64_to_u64(e)
   | |_____________________________^ help: replace the closure with the function itself: `fixed64_to_u64`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#redundant_closure

warning: unneeded `return` statement
  --> pallets/subtensor/src/math_vec.rs:41:5
   |
41 | /     return vec.into_iter()
42 | |         .map(|e| 
43 | |             u16_proportion_to_fixed(e)
44 | |         ).collect();
   | |___________________^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return
help: remove `return`
   |
41 ~     vec.into_iter()
42 +         .map(|e| 
43 +             u16_proportion_to_fixed(e)
44 ~         ).collect()
   |

warning: redundant closure
  --> pallets/subtensor/src/math_vec.rs:42:14
   |
42 |           .map(|e| 
   |  ______________^
43 | |             u16_proportion_to_fixed(e)
   | |______________________________________^ help: replace the closure with the function itself: `u16_proportion_to_fixed`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#redundant_closure

warning: unneeded `return` statement
  --> pallets/subtensor/src/math_vec.rs:50:5
   |
50 | /     return vec.into_iter()
51 | |         .map(|e| 
52 | |             fixed_proportion_to_u16(e)
53 | |         ).collect();
   | |___________________^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return
help: remove `return`
   |
50 ~     vec.into_iter()
51 +         .map(|e| 
52 +             fixed_proportion_to_u16(e)
53 ~         ).collect()
   |

warning: redundant closure
  --> pallets/subtensor/src/math_vec.rs:51:14
   |
51 |           .map(|e| 
   |  ______________^
52 | |             fixed_proportion_to_u16(e)
   | |______________________________________^ help: replace the closure with the function itself: `fixed_proportion_to_u16`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#redundant_closure

warning: writing `&Vec` instead of `&[_]` involves a new object where a slice will do
  --> pallets/subtensor/src/math_vec.rs:58:36
   |
58 | pub fn vec_max_upscale_to_u16(vec: &Vec<I32F32>) -> Vec<u16> 
   |                                    ^^^^^^^^^^^^ help: change this to: `&[I32F32]`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_arg
   = note: `#[warn(clippy::ptr_arg)]` on by default

warning: unneeded `return` statement
   --> pallets/subtensor/src/math_vec.rs:110:5
    |
110 |     return vec_max_upscale_to_u16(&vec_fixed);
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return
help: remove `return`
    |
110 -     return vec_max_upscale_to_u16(&vec_fixed);
110 +     vec_max_upscale_to_u16(&vec_fixed)
    |

warning: writing `&Vec` instead of `&[_]` involves a new object where a slice will do
   --> pallets/subtensor/src/math_vec.rs:103:40
    |
103 | pub fn vec_u16_max_upscale_to_u16(vec: &Vec<u16>) -> Vec<u16> 
    |                                        ^^^^^^^^^ help: change this to: `&[u16]`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_arg

warning: unneeded `return` statement
   --> pallets/subtensor/src/math_vec.rs:127:13
    |
127 |             return *val <= max_limit_fixed;
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return
help: remove `return`
    |
127 -             return *val <= max_limit_fixed;
127 +             *val <= max_limit_fixed
    |

warning: unneeded `return` statement
   --> pallets/subtensor/src/math_vec.rs:131:13
    |
131 |             return true;
    |             ^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return
help: remove `return`
    |
131 -             return true;
131 +             true
    |

warning: writing `&Vec` instead of `&[_]` involves a new object where a slice will do
   --> pallets/subtensor/src/math_vec.rs:115:35
    |
115 | pub fn check_vec_max_limited(vec: &Vec<u16>, max_limit: u16) -> bool 
    |                                   ^^^^^^^^^ help: change this to: `&[u16]`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_arg

warning: writing `&Vec` instead of `&[_]` involves a new object where a slice will do
   --> pallets/subtensor/src/math_vec.rs:137:15
    |
137 | pub fn sum(x: &Vec<I32F32>) -> I32F32 
    |               ^^^^^^^^^^^^ help: change this to: `&[I32F32]`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_arg

warning: unneeded `return` statement
   --> pallets/subtensor/src/math_vec.rs:172:5
    |
172 |     return Some(sum);
    |     ^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return
help: remove `return`
    |
172 -     return Some(sum);
172 +     Some(sum)
    |

warning: writing `&Vec` instead of `&[_]` involves a new object where a slice will do
   --> pallets/subtensor/src/math_vec.rs:146:26
    |
146 | pub fn checked_sum<T>(x: &Vec<T>) -> Option<T>
    |                          ^^^^^^^ help: change this to: `&[T]`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_arg

warning: length comparison to zero
   --> pallets/subtensor/src/math_vec.rs:150:8
    |
150 |     if x.len() == 0 
    |        ^^^^^^^^^^^^ help: using `is_empty` is clearer and more explicit: `x.is_empty()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#len_zero
    = note: `#[warn(clippy::len_zero)]` on by default

warning: unneeded `return` statement
   --> pallets/subtensor/src/math_vec.rs:179:5
    |
179 |     return sum(&vector) == I32F32::from_num(0);
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return
help: remove `return`
    |
179 -     return sum(&vector) == I32F32::from_num(0);
179 +     sum(&vector) == I32F32::from_num(0)
    |

warning: this expression creates a reference which is immediately dereferenced by the compiler
   --> pallets/subtensor/src/math_vec.rs:179:16
    |
179 |     return sum(&vector) == I32F32::from_num(0);
    |                ^^^^^^^ help: change this to: `vector`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow

warning: unneeded `return` statement
   --> pallets/subtensor/src/math_vec.rs:219:5
    |
219 |     return output;
    |     ^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return
help: remove `return`
    |
219 -     return output;
219 +     output
    |

warning: unneeded `return` statement
   --> pallets/subtensor/src/math_vec.rs:234:5
    |
234 |     return sigmoid_output;
    |     ^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return
help: remove `return`
    |
234 -     return sigmoid_output;
234 +     sigmoid_output
    |

warning: unneeded `return` statement
   --> pallets/subtensor/src/math_vec.rs:256:5
    |
256 |     return result;
    |     ^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return
help: remove `return`
    |
256 -     return result;
256 +     result
    |

warning: writing `&Vec` instead of `&[_]` involves a new object where a slice will do
   --> pallets/subtensor/src/math_vec.rs:239:24
    |
239 | pub fn is_topk(vector: &Vec<I32F32>, k: usize) -> Vec<bool> 
    |                        ^^^^^^^^^^^^ help: change this to: `&[I32F32]`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_arg

warning: unneeded `return` statement
   --> pallets/subtensor/src/math_vec.rs:273:9
    |
273 |         return x.clone();
    |         ^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return
help: remove `return`
    |
273 -         return x.clone();
273 +         x.clone()
    |

warning: casting float literal to `f32` is unnecessary
   --> pallets/subtensor/src/math_vec.rs:264:34
    |
264 |     if x_sum != I32F32::from_num(0.0 as f32) 
    |                                  ^^^^^^^^^^ help: try: `0.0_f32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast
    = note: `#[warn(clippy::unnecessary_cast)]` on by default

warning: writing `&mut Vec` instead of `&mut [_]` involves a new object where a slice will do
   --> pallets/subtensor/src/math_vec.rs:279:29
    |
279 | pub fn inplace_normalize(x: &mut Vec<I32F32>) 
    |                             ^^^^^^^^^^^^^^^^ help: change this to: `&mut [I32F32]`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_arg

warning: casting float literal to `f32` is unnecessary
   --> pallets/subtensor/src/math_vec.rs:282:34
    |
282 |     if x_sum == I32F32::from_num(0.0 as f32) 
    |                                  ^^^^^^^^^^ help: try: `0.0_f32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast

warning: the loop variable `i` is only used to index `x`
   --> pallets/subtensor/src/math_vec.rs:287:14
    |
287 |     for i in 0..x.len() 
    |              ^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_range_loop
    = note: `#[warn(clippy::needless_range_loop)]` on by default
help: consider using an iterator
    |
287 |     for <item> in &mut x 
    |         ~~~~~~    ~~~~~~

warning: manual implementation of an assign operation
   --> pallets/subtensor/src/math_vec.rs:289:9
    |
289 |         x[i] = x[i] / x_sum;
    |         ^^^^^^^^^^^^^^^^^^^ help: replace it with: `x[i] /= x_sum`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#assign_op_pattern
    = note: `#[warn(clippy::assign_op_pattern)]` on by default

warning: writing `&mut Vec` instead of `&mut [_]` involves a new object where a slice will do
   --> pallets/subtensor/src/math_vec.rs:295:39
    |
295 | pub fn inplace_normalize_using_sum(x: &mut Vec<I32F32>, x_sum: I32F32) 
    |                                       ^^^^^^^^^^^^^^^^ help: change this to: `&mut [I32F32]`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_arg

warning: casting float literal to `f32` is unnecessary
   --> pallets/subtensor/src/math_vec.rs:297:34
    |
297 |     if x_sum == I32F32::from_num(0.0 as f32) 
    |                                  ^^^^^^^^^^ help: try: `0.0_f32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast

warning: the loop variable `i` is only used to index `x`
   --> pallets/subtensor/src/math_vec.rs:302:14
    |
302 |     for i in 0..x.len() 
    |              ^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_range_loop
help: consider using an iterator
    |
302 |     for <item> in &mut x 
    |         ~~~~~~    ~~~~~~

warning: manual implementation of an assign operation
   --> pallets/subtensor/src/math_vec.rs:304:9
    |
304 |         x[i] = x[i] / x_sum;
    |         ^^^^^^^^^^^^^^^^^^^ help: replace it with: `x[i] /= x_sum`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#assign_op_pattern

warning: writing `&mut Vec` instead of `&mut [_]` involves a new object where a slice will do
   --> pallets/subtensor/src/math_vec.rs:310:32
    |
310 | pub fn inplace_normalize_64(x: &mut Vec<I64F64>) 
    |                                ^^^^^^^^^^^^^^^^ help: change this to: `&mut [I64F64]`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_arg

warning: the loop variable `i` is only used to index `x`
   --> pallets/subtensor/src/math_vec.rs:318:14
    |
318 |     for i in 0..x.len() 
    |              ^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_range_loop
help: consider using an iterator
    |
318 |     for <item> in &mut x 
    |         ~~~~~~    ~~~~~~

warning: manual implementation of an assign operation
   --> pallets/subtensor/src/math_vec.rs:320:9
    |
320 |         x[i] = x[i] / x_sum;
    |         ^^^^^^^^^^^^^^^^^^^ help: replace it with: `x[i] /= x_sum`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#assign_op_pattern

warning: unneeded `return` statement
   --> pallets/subtensor/src/math_vec.rs:341:5
    |
341 |     return result;
    |     ^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return
help: remove `return`
    |
341 -     return result;
341 +     result
    |

warning: writing `&Vec` instead of `&[_]` involves a new object where a slice will do
   --> pallets/subtensor/src/math_vec.rs:326:18
    |
326 | pub fn vecdiv(x: &Vec<I32F32>, y: &Vec<I32F32>) -> Vec<I32F32> 
    |                  ^^^^^^^^^^^^ help: change this to: `&[I32F32]`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_arg

warning: writing `&Vec` instead of `&[_]` involves a new object where a slice will do
   --> pallets/subtensor/src/math_vec.rs:326:35
    |
326 | pub fn vecdiv(x: &Vec<I32F32>, y: &Vec<I32F32>) -> Vec<I32F32> 
    |                                   ^^^^^^^^^^^^ help: change this to: `&[I32F32]`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_arg

warning: writing `&mut Vec` instead of `&mut [_]` involves a new object where a slice will do
 --> pallets/subtensor/src/math_mat.rs:5:33
  |
5 | pub fn inplace_row_normalize(x: &mut Vec<Vec<I32F32>>) 
  |                                 ^^^^^^^^^^^^^^^^^^^^^ help: change this to: `&mut [Vec<I32F32>]`
  |
  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_arg

warning: the loop variable `i` is only used to index `x`
 --> pallets/subtensor/src/math_mat.rs:7:14
  |
7 |     for i in 0..x.len() 
  |              ^^^^^^^^^^
  |
  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_range_loop
help: consider using an iterator
  |
7 |     for <item> in &mut x 
  |         ~~~~~~    ~~~~~~

warning: casting float literal to `f32` is unnecessary
  --> pallets/subtensor/src/math_mat.rs:10:39
   |
10 |         if row_sum > I32F32::from_num(0.0 as f32) 
   |                                       ^^^^^^^^^^ help: try: `0.0_f32`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast

warning: writing `&mut Vec` instead of `&mut [_]` involves a new object where a slice will do
  --> pallets/subtensor/src/math_mat.rs:22:52
   |
22 | pub fn inplace_row_normalize_sparse(sparse_matrix: &mut Vec<Vec<(u16, I32F32)>>) 
   |                                                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: change this to: `&mut [Vec<(u16, I32F32)>]`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_arg

warning: unneeded `return` statement
  --> pallets/subtensor/src/math_mat.rs:63:5
   |
63 |     return result;
   |     ^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return
help: remove `return`
   |
63 -     return result;
63 +     result
   |

warning: writing `&Vec` instead of `&[_]` involves a new object where a slice will do
  --> pallets/subtensor/src/math_mat.rs:40:19
   |
40 | pub fn row_sum(x: &Vec<Vec<I32F32>>) -> Vec<I32F32> 
   |                   ^^^^^^^^^^^^^^^^^ help: change this to: `&[Vec<I32F32>]`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_arg

warning: length comparison to zero
  --> pallets/subtensor/src/math_mat.rs:42:8
   |
42 |     if x.len() == 0 
   |        ^^^^^^^^^^^^ help: using `is_empty` is clearer and more explicit: `x.is_empty()`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#len_zero

warning: length comparison to zero
  --> pallets/subtensor/src/math_mat.rs:47:8
   |
47 |     if x[0].len() == 0 
   |        ^^^^^^^^^^^^^^^ help: using `is_empty` is clearer and more explicit: `x[0].is_empty()`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#len_zero

warning: unneeded `return` statement
  --> pallets/subtensor/src/math_mat.rs:81:5
   |
81 |     return result;
   |     ^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return
help: remove `return`
   |
81 -     return result;
81 +     result
   |

warning: writing `&Vec` instead of `&[_]` involves a new object where a slice will do
  --> pallets/subtensor/src/math_mat.rs:68:38
   |
68 | pub fn row_sum_sparse(sparse_matrix: &Vec<Vec<(u16, I32F32)>>) -> Vec<I32F32> 
   |                                      ^^^^^^^^^^^^^^^^^^^^^^^^ help: change this to: `&[Vec<(u16, I32F32)>]`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_arg

warning: unneeded `return` statement
   --> pallets/subtensor/src/math_mat.rs:110:5
    |
110 |     return result;
    |     ^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return
help: remove `return`
    |
110 -     return result;
110 +     result
    |

warning: writing `&Vec` instead of `&[_]` involves a new object where a slice will do
  --> pallets/subtensor/src/math_mat.rs:86:19
   |
86 | pub fn col_sum(x: &Vec<Vec<I32F32>>) -> Vec<I32F32> 
   |                   ^^^^^^^^^^^^^^^^^ help: change this to: `&[Vec<I32F32>]`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_arg

warning: length comparison to zero
  --> pallets/subtensor/src/math_mat.rs:88:8
   |
88 |     if x.len() == 0 
   |        ^^^^^^^^^^^^ help: using `is_empty` is clearer and more explicit: `x.is_empty()`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#len_zero

warning: length comparison to zero
  --> pallets/subtensor/src/math_mat.rs:93:8
   |
93 |     if x[0].len() == 0 
   |        ^^^^^^^^^^^^^^^ help: using `is_empty` is clearer and more explicit: `x[0].is_empty()`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#len_zero

warning: the loop variable `i` is only used to index `x`
   --> pallets/subtensor/src/math_mat.rs:101:14
    |
101 |     for i in 0..x.len() 
    |              ^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_range_loop
help: consider using an iterator
    |
101 |     for <item> in &x 
    |         ~~~~~~    ~~

warning: the loop variable `j` is used to index `result`
   --> pallets/subtensor/src/math_mat.rs:104:18
    |
104 |         for j in 0..cols 
    |                  ^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_range_loop
help: consider using an iterator and enumerate()
    |
104 |         for (j, <item>) in result.iter_mut().enumerate().take(cols) 
    |             ~~~~~~~~~~~    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

warning: unneeded `return` statement
   --> pallets/subtensor/src/math_mat.rs:126:5
    |
126 |     return result;
    |     ^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return
help: remove `return`
    |
126 -     return result;
126 +     result
    |

warning: writing `&Vec` instead of `&[_]` involves a new object where a slice will do
   --> pallets/subtensor/src/math_mat.rs:115:38
    |
115 | pub fn col_sum_sparse(sparse_matrix: &Vec<Vec<(u16, I32F32)>>, columns: u16) -> Vec<I32F32> 
    |                                      ^^^^^^^^^^^^^^^^^^^^^^^^ help: change this to: `&[Vec<(u16, I32F32)>]`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_arg

warning: writing `&mut Vec` instead of `&mut [_]` involves a new object where a slice will do
   --> pallets/subtensor/src/math_mat.rs:131:52
    |
131 | pub fn inplace_col_normalize_sparse(sparse_matrix: &mut Vec<Vec<(u16, I32F32)>>, columns: u16) 
    |                                                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: change this to: `&mut [Vec<(u16, I32F32)>]`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_arg

warning: casting float literal to `f32` is unnecessary
   --> pallets/subtensor/src/math_mat.rs:146:57
    |
146 |             if col_sum[*j as usize] == I32F32::from_num(0.0 as f32) 
    |                                                         ^^^^^^^^^^ help: try: `0.0_f32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast

warning: writing `&mut Vec` instead of `&mut [_]` involves a new object where a slice will do
   --> pallets/subtensor/src/math_mat.rs:158:33
    |
158 | pub fn inplace_col_normalize(x: &mut Vec<Vec<I32F32>>) 
    |                                 ^^^^^^^^^^^^^^^^^^^^^ help: change this to: `&mut [Vec<I32F32>]`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_arg

warning: length comparison to zero
   --> pallets/subtensor/src/math_mat.rs:160:8
    |
160 |     if x.len() == 0 
    |        ^^^^^^^^^^^^ help: using `is_empty` is clearer and more explicit: `x.is_empty()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#len_zero

warning: length comparison to zero
   --> pallets/subtensor/src/math_mat.rs:165:8
    |
165 |     if x[0].len() == 0 
    |        ^^^^^^^^^^^^^^^ help: using `is_empty` is clearer and more explicit: `x[0].is_empty()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#len_zero

warning: the loop variable `i` is only used to index `x`
   --> pallets/subtensor/src/math_mat.rs:173:14
    |
173 |     for i in 0..x.len() 
    |              ^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_range_loop
help: consider using an iterator
    |
173 |     for <item> in &x 
    |         ~~~~~~    ~~

warning: the loop variable `j` is used to index `col_sum`
   --> pallets/subtensor/src/math_mat.rs:176:18
    |
176 |         for j in 0..cols 
    |                  ^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_range_loop
help: consider using an iterator and enumerate()
    |
176 |         for (j, <item>) in col_sum.iter_mut().enumerate().take(cols) 
    |             ~~~~~~~~~~~    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

warning: the loop variable `j` is used to index `col_sum`
   --> pallets/subtensor/src/math_mat.rs:182:14
    |
182 |     for j in 0..cols 
    |              ^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_range_loop
help: consider using an iterator and enumerate()
    |
182 |     for (j, <item>) in col_sum.iter().enumerate().take(cols) 
    |         ~~~~~~~~~~~    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

warning: casting float literal to `f32` is unnecessary
   --> pallets/subtensor/src/math_mat.rs:184:43
    |
184 |         if col_sum[j] == I32F32::from_num(0.0 as f32) 
    |                                           ^^^^^^^^^^ help: try: `0.0_f32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast

warning: the loop variable `i` is only used to index `x`
   --> pallets/subtensor/src/math_mat.rs:189:18
    |
189 |         for i in 0..x.len() 
    |                  ^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_range_loop
help: consider using an iterator
    |
189 |         for <item> in &mut x 
    |             ~~~~~~    ~~~~~~

warning: writing `&mut Vec` instead of `&mut [_]` involves a new object where a slice will do
   --> pallets/subtensor/src/math_mat.rs:198:54
    |
198 | pub fn inplace_col_max_upscale_sparse(sparse_matrix: &mut Vec<Vec<(u16, I32F32)>>, columns: u16) 
    |                                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: change this to: `&mut [Vec<(u16, I32F32)>]`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_arg

warning: casting float literal to `f32` is unnecessary
   --> pallets/subtensor/src/math_mat.rs:216:57
    |
216 |             if col_max[*j as usize] == I32F32::from_num(0.0 as f32) 
    |                                                         ^^^^^^^^^^ help: try: `0.0_f32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast

warning: writing `&mut Vec` instead of `&mut [_]` involves a new object where a slice will do
   --> pallets/subtensor/src/math_mat.rs:228:35
    |
228 | pub fn inplace_col_max_upscale(x: &mut Vec<Vec<I32F32>>) 
    |                                   ^^^^^^^^^^^^^^^^^^^^^ help: change this to: `&mut [Vec<I32F32>]`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_arg

warning: length comparison to zero
   --> pallets/subtensor/src/math_mat.rs:230:8
    |
230 |     if x.len() == 0 
    |        ^^^^^^^^^^^^ help: using `is_empty` is clearer and more explicit: `x.is_empty()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#len_zero

warning: length comparison to zero
   --> pallets/subtensor/src/math_mat.rs:235:8
    |
235 |     if x[0].len() == 0 
    |        ^^^^^^^^^^^^^^^ help: using `is_empty` is clearer and more explicit: `x[0].is_empty()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#len_zero

warning: the loop variable `i` is only used to index `x`
   --> pallets/subtensor/src/math_mat.rs:243:14
    |
243 |     for i in 0..x.len() 
    |              ^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_range_loop
help: consider using an iterator
    |
243 |     for <item> in &x 
    |         ~~~~~~    ~~

warning: the loop variable `j` is used to index `col_max`
   --> pallets/subtensor/src/math_mat.rs:246:18
    |
246 |         for j in 0..cols 
    |                  ^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_range_loop
help: consider using an iterator and enumerate()
    |
246 |         for (j, <item>) in col_max.iter_mut().enumerate().take(cols) 
    |             ~~~~~~~~~~~    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

warning: the loop variable `j` is used to index `col_max`
   --> pallets/subtensor/src/math_mat.rs:255:14
    |
255 |     for j in 0..cols 
    |              ^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_range_loop
help: consider using an iterator and enumerate()
    |
255 |     for (j, <item>) in col_max.iter().enumerate().take(cols) 
    |         ~~~~~~~~~~~    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

warning: casting float literal to `f32` is unnecessary
   --> pallets/subtensor/src/math_mat.rs:257:43
    |
257 |         if col_max[j] == I32F32::from_num(0.0 as f32) 
    |                                           ^^^^^^^^^^ help: try: `0.0_f32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast

warning: the loop variable `i` is only used to index `x`
   --> pallets/subtensor/src/math_mat.rs:262:18
    |
262 |         for i in 0..x.len() 
    |                  ^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_range_loop
help: consider using an iterator
    |
262 |         for <item> in &mut x 
    |             ~~~~~~    ~~~~~~

warning: writing `&Vec` instead of `&[_]` involves a new object where a slice will do
   --> pallets/subtensor/src/math_mat.rs:271:34
    |
271 | pub fn inplace_mask_vector(mask: &Vec<bool>, vector: &mut Vec<I32F32>) 
    |                                  ^^^^^^^^^^ help: change this to: `&[bool]`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_arg

warning: writing `&mut Vec` instead of `&mut [_]` involves a new object where a slice will do
   --> pallets/subtensor/src/math_mat.rs:271:54
    |
271 | pub fn inplace_mask_vector(mask: &Vec<bool>, vector: &mut Vec<I32F32>) 
    |                                                      ^^^^^^^^^^^^^^^^ help: change this to: `&mut [I32F32]`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_arg

warning: length comparison to zero
   --> pallets/subtensor/src/math_mat.rs:273:8
    |
273 |     if mask.len() == 0 
    |        ^^^^^^^^^^^^^^^ help: using `is_empty` is clearer and more explicit: `mask.is_empty()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#len_zero

warning: writing `&Vec` instead of `&[_]` involves a new object where a slice will do
   --> pallets/subtensor/src/math_mat.rs:292:34
    |
292 | pub fn inplace_mask_matrix(mask: &Vec<Vec<bool>>, matrix: &mut Vec<Vec<I32F32>>) 
    |                                  ^^^^^^^^^^^^^^^ help: change this to: `&[Vec<bool>]`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_arg

warning: writing `&mut Vec` instead of `&mut [_]` involves a new object where a slice will do
   --> pallets/subtensor/src/math_mat.rs:292:59
    |
292 | pub fn inplace_mask_matrix(mask: &Vec<Vec<bool>>, matrix: &mut Vec<Vec<I32F32>>) 
    |                                                           ^^^^^^^^^^^^^^^^^^^^^ help: change this to: `&mut [Vec<I32F32>]`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_arg

warning: length comparison to zero
   --> pallets/subtensor/src/math_mat.rs:294:8
    |
294 |     if mask.len() == 0 
    |        ^^^^^^^^^^^^^^^ help: using `is_empty` is clearer and more explicit: `mask.is_empty()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#len_zero

warning: length comparison to zero
   --> pallets/subtensor/src/math_mat.rs:299:8
    |
299 |     if mask[0].len() == 0 
    |        ^^^^^^^^^^^^^^^^^^ help: using `is_empty` is clearer and more explicit: `mask[0].is_empty()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#len_zero

warning: writing `&Vec` instead of `&[_]` involves a new object where a slice will do
   --> pallets/subtensor/src/math_mat.rs:321:32
    |
321 | pub fn inplace_mask_rows(mask: &Vec<bool>, matrix: &mut Vec<Vec<I32F32>>) 
    |                                ^^^^^^^^^^ help: change this to: `&[bool]`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_arg

warning: writing `&mut Vec` instead of `&mut [_]` involves a new object where a slice will do
   --> pallets/subtensor/src/math_mat.rs:321:52
    |
321 | pub fn inplace_mask_rows(mask: &Vec<bool>, matrix: &mut Vec<Vec<I32F32>>) 
    |                                                    ^^^^^^^^^^^^^^^^^^^^^ help: change this to: `&mut [Vec<I32F32>]`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_arg

warning: writing `&mut Vec` instead of `&mut [_]` involves a new object where a slice will do
   --> pallets/subtensor/src/math_mat.rs:344:34
    |
344 | pub fn inplace_mask_diag(matrix: &mut Vec<Vec<I32F32>>) 
    |                                  ^^^^^^^^^^^^^^^^^^^^^ help: change this to: `&mut [Vec<I32F32>]`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_arg

warning: length comparison to zero
   --> pallets/subtensor/src/math_mat.rs:346:8
    |
346 |     if matrix.len() == 0 
    |        ^^^^^^^^^^^^^^^^^ help: using `is_empty` is clearer and more explicit: `matrix.is_empty()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#len_zero

warning: length comparison to zero
   --> pallets/subtensor/src/math_mat.rs:351:8
    |
351 |     if matrix[0].len() == 0 
    |        ^^^^^^^^^^^^^^^^^^^^ help: using `is_empty` is clearer and more explicit: `matrix[0].is_empty()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#len_zero

warning: the loop variable `i` is used to index `matrix`
   --> pallets/subtensor/src/math_mat.rs:359:14
    |
359 |     for i in 0..matrix.len() 
    |              ^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_range_loop
help: consider using an iterator and enumerate()
    |
359 |     for (i, <item>) in matrix.iter_mut().enumerate() 
    |         ~~~~~~~~~~~    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

warning: unneeded `return` statement
   --> pallets/subtensor/src/math_mat.rs:380:5
    |
380 |     return result;
    |     ^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return
help: remove `return`
    |
380 -     return result;
380 +     result
    |

warning: writing `&Vec` instead of `&[_]` involves a new object where a slice will do
   --> pallets/subtensor/src/math_mat.rs:367:31
    |
367 | pub fn mask_rows_sparse(mask: &Vec<bool>, sparse_matrix: &Vec<Vec<(u16, I32F32)>>) -> Vec<Vec<(u16, I32F32)>> 
    |                               ^^^^^^^^^^ help: change this to: `&[bool]`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_arg

warning: writing `&Vec` instead of `&[_]` involves a new object where a slice will do
   --> pallets/subtensor/src/math_mat.rs:367:58
    |
367 | pub fn mask_rows_sparse(mask: &Vec<bool>, sparse_matrix: &Vec<Vec<(u16, I32F32)>>) -> Vec<Vec<(u16, I32F32)>> 
    |                                                          ^^^^^^^^^^^^^^^^^^^^^^^^ help: change this to: `&[Vec<(u16, I32F32)>]`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_arg

warning: unneeded `return` statement
   --> pallets/subtensor/src/math_mat.rs:400:5
    |
400 |     return result;
    |     ^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return
help: remove `return`
    |
400 -     return result;
400 +     result
    |

warning: writing `&Vec` instead of `&[_]` involves a new object where a slice will do
   --> pallets/subtensor/src/math_mat.rs:385:40
    |
385 | pub fn mask_diag_sparse(sparse_matrix: &Vec<Vec<(u16, I32F32)>>) -> Vec<Vec<(u16, I32F32)>> 
    |                                        ^^^^^^^^^^^^^^^^^^^^^^^^ help: change this to: `&[Vec<(u16, I32F32)>]`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_arg

warning: unneeded `return` statement
   --> pallets/subtensor/src/math_mat.rs:421:5
    |
421 |     return result;
    |     ^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return
help: remove `return`
    |
421 -     return result;
421 +     result
    |

warning: writing `&Vec` instead of `&[_]` involves a new object where a slice will do
   --> pallets/subtensor/src/math_mat.rs:405:46
    |
405 | pub fn vec_mask_sparse_matrix(sparse_matrix: &Vec<Vec<(u16, I32F32)>>, first_vector: &Vec<u64>, second_vector: &Vec<u64>, mask_fn: &dyn F...
    |                                              ^^^^^^^^^^^^^^^^^^^^^^^^ help: change this to: `&[Vec<(u16, I32F32)>]`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_arg

warning: writing `&Vec` instead of `&[_]` involves a new object where a slice will do
   --> pallets/subtensor/src/math_mat.rs:405:86
    |
405 | pub fn vec_mask_sparse_matrix(sparse_matrix: &Vec<Vec<(u16, I32F32)>>, first_vector: &Vec<u64>, second_vector: &Vec<u64>, mask_fn: &dyn F...
    |                                                                                      ^^^^^^^^^ help: change this to: `&[u64]`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_arg

warning: writing `&Vec` instead of `&[_]` involves a new object where a slice will do
   --> pallets/subtensor/src/math_mat.rs:405:112
    |
405 | ...32)>>, first_vector: &Vec<u64>, second_vector: &Vec<u64>, mask_fn: &dyn Fn(u64, u64) -> bool) 
    |                                                   ^^^^^^^^^ help: change this to: `&[u64]`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_arg

warning: unneeded `return` statement
   --> pallets/subtensor/src/math_mat.rs:447:5
    |
447 |     return result;
    |     ^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return
help: remove `return`
    |
447 -     return result;
447 +     result
    |

warning: writing `&Vec` instead of `&[_]` involves a new object where a slice will do
   --> pallets/subtensor/src/math_mat.rs:426:29
    |
426 | pub fn row_hadamard(matrix: &Vec<Vec<I32F32>>, vector: &Vec<I32F32>) -> Vec<Vec<I32F32>> 
    |                             ^^^^^^^^^^^^^^^^^ help: change this to: `&[Vec<I32F32>]`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_arg

warning: writing `&Vec` instead of `&[_]` involves a new object where a slice will do
   --> pallets/subtensor/src/math_mat.rs:426:56
    |
426 | pub fn row_hadamard(matrix: &Vec<Vec<I32F32>>, vector: &Vec<I32F32>) -> Vec<Vec<I32F32>> 
    |                                                        ^^^^^^^^^^^^ help: change this to: `&[I32F32]`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_arg

warning: length comparison to zero
   --> pallets/subtensor/src/math_mat.rs:428:8
    |
428 |     if matrix.len() == 0 
    |        ^^^^^^^^^^^^^^^^^ help: using `is_empty` is clearer and more explicit: `matrix.is_empty()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#len_zero

warning: length comparison to zero
   --> pallets/subtensor/src/math_mat.rs:433:8
    |
433 |     if matrix[0].len() == 0 
    |        ^^^^^^^^^^^^^^^^^^^^ help: using `is_empty` is clearer and more explicit: `matrix[0].is_empty()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#len_zero

warning: unneeded `return` statement
   --> pallets/subtensor/src/math_mat.rs:463:5
    |
463 |     return result;
    |     ^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return
help: remove `return`
    |
463 -     return result;
463 +     result
    |

warning: writing `&Vec` instead of `&[_]` involves a new object where a slice will do
   --> pallets/subtensor/src/math_mat.rs:452:43
    |
452 | pub fn row_hadamard_sparse(sparse_matrix: &Vec<Vec<(u16, I32F32)>>, vector: &Vec<I32F32>) -> Vec<Vec<(u16, I32F32)>> 
    |                                           ^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_arg
help: change this to
    |
452 ~ pub fn row_hadamard_sparse(sparse_matrix: &[Vec<(u16, I32F32)>], vector: &Vec<I32F32>) -> Vec<Vec<(u16, I32F32)>> 
453 | {
454 ~     let mut result: Vec<Vec<(u16, I32F32)>> = sparse_matrix.to_owned();
    |

warning: writing `&Vec` instead of `&[_]` involves a new object where a slice will do
   --> pallets/subtensor/src/math_mat.rs:452:77
    |
452 | pub fn row_hadamard_sparse(sparse_matrix: &Vec<Vec<(u16, I32F32)>>, vector: &Vec<I32F32>) -> Vec<Vec<(u16, I32F32)>> 
    |                                                                             ^^^^^^^^^^^^ help: change this to: `&[I32F32]`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_arg

warning: unneeded `return` statement
   --> pallets/subtensor/src/math_mat.rs:494:5
    |
494 |     return result;
    |     ^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return
help: remove `return`
    |
494 -     return result;
494 +     result
    |

warning: writing `&Vec` instead of `&[_]` involves a new object where a slice will do
   --> pallets/subtensor/src/math_mat.rs:468:23
    |
468 | pub fn matmul(matrix: &Vec<Vec<I32F32>>, vector: &Vec<I32F32>) -> Vec<I32F32> 
    |                       ^^^^^^^^^^^^^^^^^ help: change this to: `&[Vec<I32F32>]`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_arg

warning: writing `&Vec` instead of `&[_]` involves a new object where a slice will do
   --> pallets/subtensor/src/math_mat.rs:468:50
    |
468 | pub fn matmul(matrix: &Vec<Vec<I32F32>>, vector: &Vec<I32F32>) -> Vec<I32F32> 
    |                                                  ^^^^^^^^^^^^ help: change this to: `&[I32F32]`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_arg

warning: length comparison to zero
   --> pallets/subtensor/src/math_mat.rs:470:8
    |
470 |     if matrix.len() == 0 
    |        ^^^^^^^^^^^^^^^^^ help: using `is_empty` is clearer and more explicit: `matrix.is_empty()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#len_zero

warning: length comparison to zero
   --> pallets/subtensor/src/math_mat.rs:475:8
    |
475 |     if matrix[0].len() == 0 
    |        ^^^^^^^^^^^^^^^^^^^^ help: using `is_empty` is clearer and more explicit: `matrix[0].is_empty()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#len_zero

warning: the loop variable `j` is used to index `result`
   --> pallets/subtensor/src/math_mat.rs:485:18
    |
485 |         for j in 0..matrix[i].len() 
    |                  ^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_range_loop
help: consider using an iterator and enumerate()
    |
485 |         for (j, <item>) in result.iter_mut().enumerate().take(matrix[i].len()) 
    |             ~~~~~~~~~~~    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

warning: unneeded `return` statement
   --> pallets/subtensor/src/math_mat.rs:525:5
    |
525 |     return result;
    |     ^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return
help: remove `return`
    |
525 -     return result;
525 +     result
    |

warning: writing `&Vec` instead of `&[_]` involves a new object where a slice will do
   --> pallets/subtensor/src/math_mat.rs:499:26
    |
499 | pub fn matmul_64(matrix: &Vec<Vec<I64F64>>, vector: &Vec<I64F64>) -> Vec<I64F64> 
    |                          ^^^^^^^^^^^^^^^^^ help: change this to: `&[Vec<I64F64>]`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_arg

warning: writing `&Vec` instead of `&[_]` involves a new object where a slice will do
   --> pallets/subtensor/src/math_mat.rs:499:53
    |
499 | pub fn matmul_64(matrix: &Vec<Vec<I64F64>>, vector: &Vec<I64F64>) -> Vec<I64F64> 
    |                                                     ^^^^^^^^^^^^ help: change this to: `&[I64F64]`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_arg

warning: length comparison to zero
   --> pallets/subtensor/src/math_mat.rs:501:8
    |
501 |     if matrix.len() == 0 
    |        ^^^^^^^^^^^^^^^^^ help: using `is_empty` is clearer and more explicit: `matrix.is_empty()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#len_zero

warning: length comparison to zero
   --> pallets/subtensor/src/math_mat.rs:506:8
    |
506 |     if matrix[0].len() == 0 
    |        ^^^^^^^^^^^^^^^^^^^^ help: using `is_empty` is clearer and more explicit: `matrix[0].is_empty()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#len_zero

warning: the loop variable `j` is used to index `result`
   --> pallets/subtensor/src/math_mat.rs:516:18
    |
516 |         for j in 0..matrix[i].len() 
    |                  ^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_range_loop
help: consider using an iterator and enumerate()
    |
516 |         for (j, <item>) in result.iter_mut().enumerate().take(matrix[i].len()) 
    |             ~~~~~~~~~~~    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

warning: unneeded `return` statement
   --> pallets/subtensor/src/math_mat.rs:556:5
    |
556 |     return result;
    |     ^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return
help: remove `return`
    |
556 -     return result;
556 +     result
    |

warning: writing `&Vec` instead of `&[_]` involves a new object where a slice will do
   --> pallets/subtensor/src/math_mat.rs:530:33
    |
530 | pub fn matmul_transpose(matrix: &Vec<Vec<I32F32>>, vector: &Vec<I32F32>) -> Vec<I32F32> 
    |                                 ^^^^^^^^^^^^^^^^^ help: change this to: `&[Vec<I32F32>]`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_arg

warning: writing `&Vec` instead of `&[_]` involves a new object where a slice will do
   --> pallets/subtensor/src/math_mat.rs:530:60
    |
530 | pub fn matmul_transpose(matrix: &Vec<Vec<I32F32>>, vector: &Vec<I32F32>) -> Vec<I32F32> 
    |                                                            ^^^^^^^^^^^^ help: change this to: `&[I32F32]`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_arg

warning: length comparison to zero
   --> pallets/subtensor/src/math_mat.rs:532:8
    |
532 |     if matrix.len() == 0 
    |        ^^^^^^^^^^^^^^^^^ help: using `is_empty` is clearer and more explicit: `matrix.is_empty()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#len_zero

warning: length comparison to zero
   --> pallets/subtensor/src/math_mat.rs:537:8
    |
537 |     if matrix[0].len() == 0 
    |        ^^^^^^^^^^^^^^^^^^^^ help: using `is_empty` is clearer and more explicit: `matrix[0].is_empty()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#len_zero

warning: the loop variable `j` is used to index `vector`
   --> pallets/subtensor/src/math_mat.rs:547:18
    |
547 |         for j in 0..matrix[i].len() 
    |                  ^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_range_loop
help: consider using an iterator and enumerate()
    |
547 |         for (j, <item>) in vector.iter().enumerate().take(matrix[i].len()) 
    |             ~~~~~~~~~~~    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

warning: unneeded `return` statement
   --> pallets/subtensor/src/math_mat.rs:575:5
    |
575 |     return result;
    |     ^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return
help: remove `return`
    |
575 -     return result;
575 +     result
    |

warning: writing `&Vec` instead of `&[_]` involves a new object where a slice will do
   --> pallets/subtensor/src/math_mat.rs:561:37
    |
561 | pub fn matmul_sparse(sparse_matrix: &Vec<Vec<(u16, I32F32)>>, vector: &Vec<I32F32>, columns: u16) -> Vec<I32F32> 
    |                                     ^^^^^^^^^^^^^^^^^^^^^^^^ help: change this to: `&[Vec<(u16, I32F32)>]`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_arg

warning: writing `&Vec` instead of `&[_]` involves a new object where a slice will do
   --> pallets/subtensor/src/math_mat.rs:561:71
    |
561 | pub fn matmul_sparse(sparse_matrix: &Vec<Vec<(u16, I32F32)>>, vector: &Vec<I32F32>, columns: u16) -> Vec<I32F32> 
    |                                                                       ^^^^^^^^^^^^ help: change this to: `&[I32F32]`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_arg

warning: unneeded `return` statement
   --> pallets/subtensor/src/math_mat.rs:594:5
    |
594 |     return result;
    |     ^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return
help: remove `return`
    |
594 -     return result;
594 +     result
    |

warning: writing `&Vec` instead of `&[_]` involves a new object where a slice will do
   --> pallets/subtensor/src/math_mat.rs:580:47
    |
580 | pub fn matmul_transpose_sparse(sparse_matrix: &Vec<Vec<(u16, I32F32)>>, vector: &Vec<I32F32>) -> Vec<I32F32> 
    |                                               ^^^^^^^^^^^^^^^^^^^^^^^^ help: change this to: `&[Vec<(u16, I32F32)>]`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_arg

warning: writing `&Vec` instead of `&[_]` involves a new object where a slice will do
   --> pallets/subtensor/src/math_mat.rs:580:81
    |
580 | pub fn matmul_transpose_sparse(sparse_matrix: &Vec<Vec<(u16, I32F32)>>, vector: &Vec<I32F32>) -> Vec<I32F32> 
    |                                                                                 ^^^^^^^^^^^^ help: change this to: `&[I32F32]`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_arg

warning: writing `&mut Vec` instead of `&mut [_]` involves a new object where a slice will do
   --> pallets/subtensor/src/math_mat.rs:599:28
    |
599 | pub fn inplace_col_clip(x: &mut Vec<Vec<I32F32>>, col_threshold: &Vec<I32F32>) 
    |                            ^^^^^^^^^^^^^^^^^^^^^ help: change this to: `&mut [Vec<I32F32>]`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_arg

warning: writing `&Vec` instead of `&[_]` involves a new object where a slice will do
   --> pallets/subtensor/src/math_mat.rs:599:66
    |
599 | pub fn inplace_col_clip(x: &mut Vec<Vec<I32F32>>, col_threshold: &Vec<I32F32>) 
    |                                                                  ^^^^^^^^^^^^ help: change this to: `&[I32F32]`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_arg

warning: the loop variable `i` is only used to index `x`
   --> pallets/subtensor/src/math_mat.rs:601:14
    |
601 |     for i in 0..x.len() 
    |              ^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_range_loop
help: consider using an iterator
    |
601 |     for <item> in &mut x 
    |         ~~~~~~    ~~~~~~

warning: the loop variable `j` is used to index `col_threshold`
   --> pallets/subtensor/src/math_mat.rs:603:18
    |
603 |         for j in 0..x[i].len() 
    |                  ^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_range_loop
help: consider using an iterator and enumerate()
    |
603 |         for (j, <item>) in col_threshold.iter().enumerate().take(x[i].len()) 
    |             ~~~~~~~~~~~    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

warning: unneeded `return` statement
   --> pallets/subtensor/src/math_mat.rs:636:5
    |
636 |     return result;
    |     ^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return
help: remove `return`
    |
636 -     return result;
636 +     result
    |

warning: writing `&Vec` instead of `&[_]` involves a new object where a slice will do
   --> pallets/subtensor/src/math_mat.rs:615:39
    |
615 | pub fn col_clip_sparse(sparse_matrix: &Vec<Vec<(u16, I32F32)>>, col_threshold: &Vec<I32F32>) -> Vec<Vec<(u16, I32F32)>> 
    |                                       ^^^^^^^^^^^^^^^^^^^^^^^^ help: change this to: `&[Vec<(u16, I32F32)>]`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_arg

warning: writing `&Vec` instead of `&[_]` involves a new object where a slice will do
   --> pallets/subtensor/src/math_mat.rs:615:80
    |
615 | pub fn col_clip_sparse(sparse_matrix: &Vec<Vec<(u16, I32F32)>>, col_threshold: &Vec<I32F32>) -> Vec<Vec<(u16, I32F32)>> 
    |                                                                                ^^^^^^^^^^^^ help: change this to: `&[I32F32]`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_arg

warning: unneeded `return` statement
   --> pallets/subtensor/src/math_mat.rs:661:5
    |
661 |     return result;
    |     ^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return
help: remove `return`
    |
661 -     return result;
661 +     result
    |

warning: writing `&Vec` instead of `&[_]` involves a new object where a slice will do
   --> pallets/subtensor/src/math_mat.rs:641:16
    |
641 | pub fn clip(x: &Vec<Vec<I32F32>>, threshold: I32F32, upper: I32F32, lower: I32F32) -> Vec<Vec<I32F32>> 
    |                ^^^^^^^^^^^^^^^^^ help: change this to: `&[Vec<I32F32>]`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_arg

warning: length comparison to zero
   --> pallets/subtensor/src/math_mat.rs:644:8
    |
644 |     if x.len() == 0 
    |        ^^^^^^^^^^^^ help: using `is_empty` is clearer and more explicit: `x.is_empty()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#len_zero

warning: writing `&mut Vec` instead of `&mut [_]` involves a new object where a slice will do
   --> pallets/subtensor/src/math_mat.rs:666:24
    |
666 | pub fn inplace_clip(x: &mut Vec<Vec<I32F32>>, threshold: I32F32, upper: I32F32, lower: I32F32) 
    |                        ^^^^^^^^^^^^^^^^^^^^^ help: change this to: `&mut [Vec<I32F32>]`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_arg

warning: the loop variable `i` is only used to index `x`
   --> pallets/subtensor/src/math_mat.rs:668:14
    |
668 |     for i in 0..x.len() 
    |              ^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_range_loop
help: consider using an iterator
    |
668 |     for <item> in &mut x 
    |         ~~~~~~    ~~~~~~

warning: unneeded `return` statement
   --> pallets/subtensor/src/math_mat.rs:705:5
    |
705 |     return result;
    |     ^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return
help: remove `return`
    |
705 -     return result;
705 +     result
    |

warning: writing `&Vec` instead of `&[_]` involves a new object where a slice will do
   --> pallets/subtensor/src/math_mat.rs:687:35
    |
687 | pub fn clip_sparse(sparse_matrix: &Vec<Vec<(u16, I32F32)>>, threshold: I32F32, upper: I32F32, lower: I32F32) -> Vec<Vec<(u16, I32F32)>> 
    |                                   ^^^^^^^^^^^^^^^^^^^^^^^^ help: change this to: `&[Vec<(u16, I32F32)>]`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_arg

warning: unneeded `return` statement
   --> pallets/subtensor/src/math_mat.rs:734:5
    |
734 |     return result;
    |     ^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return
help: remove `return`
    |
734 -     return result;
734 +     result
    |

warning: writing `&Vec` instead of `&[_]` involves a new object where a slice will do
   --> pallets/subtensor/src/math_mat.rs:710:23
    |
710 | pub fn hadamard(mat1: &Vec<Vec<I32F32>>, mat2: &Vec<Vec<I32F32>>) -> Vec<Vec<I32F32>> 
    |                       ^^^^^^^^^^^^^^^^^ help: change this to: `&[Vec<I32F32>]`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_arg

warning: writing `&Vec` instead of `&[_]` involves a new object where a slice will do
   --> pallets/subtensor/src/math_mat.rs:710:48
    |
710 | pub fn hadamard(mat1: &Vec<Vec<I32F32>>, mat2: &Vec<Vec<I32F32>>) -> Vec<Vec<I32F32>> 
    |                                                ^^^^^^^^^^^^^^^^^ help: change this to: `&[Vec<I32F32>]`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_arg

warning: length comparison to zero
   --> pallets/subtensor/src/math_mat.rs:714:8
    |
714 |     if mat1.len() == 0 
    |        ^^^^^^^^^^^^^^^ help: using `is_empty` is clearer and more explicit: `mat1.is_empty()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#len_zero

warning: length comparison to zero
   --> pallets/subtensor/src/math_mat.rs:719:8
    |
719 |     if mat1[0].len() == 0 
    |        ^^^^^^^^^^^^^^^^^^ help: using `is_empty` is clearer and more explicit: `mat1[0].is_empty()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#len_zero

warning: unneeded `return` statement
   --> pallets/subtensor/src/math_mat.rs:771:5
    |
771 |     return result;
    |     ^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return
help: remove `return`
    |
771 -     return result;
771 +     result
    |

warning: writing `&Vec` instead of `&[_]` involves a new object where a slice will do
   --> pallets/subtensor/src/math_mat.rs:739:30
    |
739 | pub fn hadamard_sparse(mat1: &Vec<Vec<(u16, I32F32)>>, mat2: &Vec<Vec<(u16, I32F32)>>, columns: u16) -> Vec<Vec<(u16, I32F32)>> 
    |                              ^^^^^^^^^^^^^^^^^^^^^^^^ help: change this to: `&[Vec<(u16, I32F32)>]`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_arg

warning: writing `&Vec` instead of `&[_]` involves a new object where a slice will do
   --> pallets/subtensor/src/math_mat.rs:739:62
    |
739 | pub fn hadamard_sparse(mat1: &Vec<Vec<(u16, I32F32)>>, mat2: &Vec<Vec<(u16, I32F32)>>, columns: u16) -> Vec<Vec<(u16, I32F32)>> 
    |                                                              ^^^^^^^^^^^^^^^^^^^^^^^^ help: change this to: `&[Vec<(u16, I32F32)>]`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_arg

warning: unneeded `return` statement
   --> pallets/subtensor/src/math_mat.rs:802:5
    |
802 |     return result;
    |     ^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return
help: remove `return`
    |
802 -     return result;
802 +     result
    |

warning: writing `&Vec` instead of `&[_]` involves a new object where a slice will do
   --> pallets/subtensor/src/math_mat.rs:778:21
    |
778 | pub fn mat_ema(new: &Vec<Vec<I32F32>>, old: &Vec<Vec<I32F32>>, alpha: I32F32) -> Vec<Vec<I32F32>> 
    |                     ^^^^^^^^^^^^^^^^^ help: change this to: `&[Vec<I32F32>]`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_arg

warning: writing `&Vec` instead of `&[_]` involves a new object where a slice will do
   --> pallets/subtensor/src/math_mat.rs:778:45
    |
778 | pub fn mat_ema(new: &Vec<Vec<I32F32>>, old: &Vec<Vec<I32F32>>, alpha: I32F32) -> Vec<Vec<I32F32>> 
    |                                             ^^^^^^^^^^^^^^^^^ help: change this to: `&[Vec<I32F32>]`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_arg

warning: length comparison to zero
   --> pallets/subtensor/src/math_mat.rs:780:8
    |
780 |     if new.len() == 0 
    |        ^^^^^^^^^^^^^^ help: using `is_empty` is clearer and more explicit: `new.is_empty()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#len_zero

warning: length comparison to zero
   --> pallets/subtensor/src/math_mat.rs:785:8
    |
785 |     if new[0].len() == 0 
    |        ^^^^^^^^^^^^^^^^^ help: using `is_empty` is clearer and more explicit: `new[0].is_empty()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#len_zero

warning: unneeded `return` statement
   --> pallets/subtensor/src/math_mat.rs:840:5
    |
840 |     return result;
    |     ^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return
help: remove `return`
    |
840 -     return result;
840 +     result
    |

warning: writing `&Vec` instead of `&[_]` involves a new object where a slice will do
   --> pallets/subtensor/src/math_mat.rs:809:28
    |
809 | pub fn mat_ema_sparse(new: &Vec<Vec<(u16, I32F32)>>, old: &Vec<Vec<(u16, I32F32)>>, alpha: I32F32) -> Vec<Vec<(u16, I32F32)>> 
    |                            ^^^^^^^^^^^^^^^^^^^^^^^^ help: change this to: `&[Vec<(u16, I32F32)>]`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_arg

warning: writing `&Vec` instead of `&[_]` involves a new object where a slice will do
   --> pallets/subtensor/src/math_mat.rs:809:59
    |
809 | pub fn mat_ema_sparse(new: &Vec<Vec<(u16, I32F32)>>, old: &Vec<Vec<(u16, I32F32)>>, alpha: I32F32) -> Vec<Vec<(u16, I32F32)>> 
    |                                                           ^^^^^^^^^^^^^^^^^^^^^^^^ help: change this to: `&[Vec<(u16, I32F32)>]`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_arg

warning: unneeded `return` statement
   --> pallets/subtensor/src/math_mat.rs:859:5
    |
859 |     return sparse_threshold_result;
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return
help: remove `return`
    |
859 -     return sparse_threshold_result;
859 +     sparse_threshold_result
    |

warning: writing `&Vec` instead of `&[_]` involves a new object where a slice will do
   --> pallets/subtensor/src/math_mat.rs:845:28
    |
845 | pub fn sparse_threshold(w: &Vec<Vec<(u16, I32F32)>>, threshold: I32F32) -> Vec<Vec<(u16, I32F32)>> 
    |                            ^^^^^^^^^^^^^^^^^^^^^^^^ help: change this to: `&[Vec<(u16, I32F32)>]`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_arg

warning: casting to the same type is unnecessary (`usize` -> `usize`)
   --> pallets/subtensor/src/math_mat.rs:854:41
    |
854 |                 sparse_threshold_result[uid_i as usize].push((*uid_j, *weight_ij));
    |                                         ^^^^^^^^^^^^^^ help: try: `uid_i`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast

warning: unneeded `return` statement
   --> pallets/subtensor/src/math.rs:186:5
    |
186 |     return pivot;
    |     ^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return
help: remove `return`
    |
186 -     return pivot;
186 +     pivot
    |

warning: writing `&Vec` instead of `&[_]` involves a new object where a slice will do
   --> pallets/subtensor/src/math.rs:117:81
    |
117 | pub fn weighted_median(stake: &Vec<I32F32>, score: &Vec<I32F32>, partition_idx: &Vec<usize>, minority: I32F32, partition_lo: I32F32, part...
    |                                                                                 ^^^^^^^^^^^ help: change this to: `&[usize]`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_arg

warning: length comparison to zero
   --> pallets/subtensor/src/math.rs:163:54
    |
163 |     else if (minority < partition_lo + lo_stake) && (lower.len() > 0) 
    |                                                      ^^^^^^^^^^^^^^^ help: using `!is_empty` is clearer and more explicit: `!lower.is_empty()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#len_zero

warning: length comparison to zero
   --> pallets/subtensor/src/math.rs:174:55
    |
174 |     else if (partition_hi - hi_stake <= minority) && (upper.len() > 0) 
    |                                                       ^^^^^^^^^^^^^^^ help: using `!is_empty` is clearer and more explicit: `!upper.is_empty()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#len_zero

warning: unneeded `return` statement
   --> pallets/subtensor/src/math.rs:228:5
    |
228 |     return median;
    |     ^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return
help: remove `return`
    |
228 -     return median;
228 +     median
    |

warning: writing `&Vec` instead of `&[_]` involves a new object where a slice will do
   --> pallets/subtensor/src/math.rs:191:35
    |
191 | pub fn weighted_median_col(stake: &Vec<I32F32>, score: &Vec<Vec<I32F32>>, majority: I32F32) -> Vec<I32F32> 
    |                                   ^^^^^^^^^^^^ help: change this to: `&[I32F32]`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_arg

warning: writing `&Vec` instead of `&[_]` involves a new object where a slice will do
   --> pallets/subtensor/src/math.rs:191:56
    |
191 | pub fn weighted_median_col(stake: &Vec<I32F32>, score: &Vec<Vec<I32F32>>, majority: I32F32) -> Vec<I32F32> 
    |                                                        ^^^^^^^^^^^^^^^^^ help: change this to: `&[Vec<I32F32>]`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_arg

warning: the loop variable `c` is used to index `median`
   --> pallets/subtensor/src/math.rs:197:14
    |
197 |     for c in 0..columns 
    |              ^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_range_loop
help: consider using an iterator and enumerate()
    |
197 |     for (c, <item>) in median.iter_mut().enumerate().take(columns) 
    |         ~~~~~~~~~~~    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

warning: length comparison to zero
   --> pallets/subtensor/src/math.rs:210:12
    |
210 |         if use_stake.len() > 0 
    |            ^^^^^^^^^^^^^^^^^^^ help: using `!is_empty` is clearer and more explicit: `!use_stake.is_empty()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#len_zero

warning: unneeded `return` statement
   --> pallets/subtensor/src/math.rs:273:5
    |
273 |     return median;
    |     ^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return
help: remove `return`
    |
273 -     return median;
273 +     median
    |

warning: writing `&Vec` instead of `&[_]` involves a new object where a slice will do
   --> pallets/subtensor/src/math.rs:233:42
    |
233 | pub fn weighted_median_col_sparse(stake: &Vec<I32F32>, score: &Vec<Vec<(u16, I32F32)>>, columns: u16, majority: I32F32) -> Vec<I32F32> 
    |                                          ^^^^^^^^^^^^ help: change this to: `&[I32F32]`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_arg

warning: writing `&Vec` instead of `&[_]` involves a new object where a slice will do
   --> pallets/subtensor/src/math.rs:233:63
    |
233 | pub fn weighted_median_col_sparse(stake: &Vec<I32F32>, score: &Vec<Vec<(u16, I32F32)>>, columns: u16, majority: I32F32) -> Vec<I32F32> 
    |                                                               ^^^^^^^^^^^^^^^^^^^^^^^^ help: change this to: `&[Vec<(u16, I32F32)>]`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_arg

warning: unneeded `return` statement
   --> pallets/subtensor/src/registration.rs:244:9
    |
244 |         return Ok(());
    |         ^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return
help: remove `return`
    |
244 -         return Ok(());
244 +         Ok(())
    |

warning: equality checks against true are unnecessary
   --> pallets/subtensor/src/registration.rs:167:17
    |
167 |                 Self::remove_balance_from_coldkey_account(&coldkey, registration_cost_as_balance) == true,
    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try simplifying it as shown: `Self::remove_balance_from_coldkey_account(&coldkey, registration_cost_as_balance)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#bool_comparison
    = note: `#[warn(clippy::bool_comparison)]` on by default

warning: unneeded `return` statement
   --> pallets/subtensor/src/registration.rs:469:9
    |
469 |         return Ok(());
    |         ^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return
help: remove `return`
    |
469 -         return Ok(());
469 +         Ok(())
    |

warning: the borrowed expression implements the required traits
   --> pallets/subtensor/src/registration.rs:392:35
    |
392 |             UsedWork::<T>::insert(&work.clone(), current_block_number);
    |                                   ^^^^^^^^^^^^^ help: change this to: `work.clone()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrows_for_generic_args
    = note: `#[warn(clippy::needless_borrows_for_generic_args)]` on by default

warning: unneeded `return` statement
   --> pallets/subtensor/src/registration.rs:551:9
    |
551 |         return Ok(());
    |         ^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return
help: remove `return`
    |
551 -         return Ok(());
551 +         Ok(())
    |

warning: the borrowed expression implements the required traits
   --> pallets/subtensor/src/registration.rs:524:35
    |
524 |             UsedWork::<T>::insert(&work.clone(), current_block_number);
    |                                   ^^^^^^^^^^^^^ help: change this to: `work.clone()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrows_for_generic_args

warning: unneeded `return` statement
   --> pallets/subtensor/src/registration.rs:624:9
    |
624 |         return uid_with_min_score;
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return
help: remove `return`
    |
624 -         return uid_with_min_score;
624 +         uid_with_min_score
    |

warning: this `if` has identical blocks
   --> pallets/subtensor/src/registration.rs:575:13
    |
575 | /             {
576 | |                 if current_block - block_at_registration < immunity_period 
577 | |                 {
578 | |                     //neuron is in immunity period
...   |
589 | |                 }
590 | |             }
    | |_____________^
    |
note: same as this
   --> pallets/subtensor/src/registration.rs:592:13
    |
592 | /             {
593 | |                 if current_block - block_at_registration < immunity_period 
594 | |                 {
595 | |                     //neuron is in immunity period
...   |
606 | |                 }
607 | |             }
    | |_____________^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#if_same_then_else
    = note: `#[warn(clippy::if_same_then_else)]` on by default

warning: `if` chain can be rewritten with `match`
   --> pallets/subtensor/src/registration.rs:574:13
    |
574 | /             if min_score == pruning_score 
575 | |             {
576 | |                 if current_block - block_at_registration < immunity_period 
577 | |                 {
...   |
606 | |                 }
607 | |             }
    | |_____________^
    |
    = help: consider rewriting the `if` chain to use `cmp` and `match`
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#comparison_chain

warning: unneeded `return` statement
   --> pallets/subtensor/src/registration.rs:648:9
    |
648 |         return !(overflowed);
    |         ^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return
help: remove `return`
    |
648 -         return !(overflowed);
648 +         !(overflowed)
    |

warning: this expression creates a reference which is immediately dereferenced by the compiler
   --> pallets/subtensor/src/registration.rs:633:35
    |
633 |         let bytes:      &[u8]   = &hash.as_bytes();
    |                                   ^^^^^^^^^^^^^^^^ help: change this to: `hash.as_bytes()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow

warning: unneeded `return` statement
   --> pallets/subtensor/src/registration.rs:669:9
    |
669 |         return real_hash;
    |         ^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return
help: remove `return`
    |
669 -         return real_hash;
669 +         real_hash
    |

warning: this `.into_iter()` call is equivalent to `.iter()` and will not consume the `slice`
   --> pallets/subtensor/src/registration.rs:658:105
    |
658 |         let vec_hash:               Vec<u8>                             = block_hash_at_number.as_ref().into_iter().cloned().collect();
    |                                                                                                         ^^^^^^^^^ help: call directly: `iter`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#into_iter_on_ref
    = note: `#[warn(clippy::into_iter_on_ref)]` on by default

warning: unneeded `return` statement
   --> pallets/subtensor/src/registration.rs:691:9
    |
691 |         return seal_hash;
    |         ^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return
help: remove `return`
    |
691 -         return seal_hash;
691 +         seal_hash
    |

warning: unneeded `return` statement
   --> pallets/subtensor/src/registration.rs:728:9
    |
728 |         return seal_hash;
    |         ^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return
help: remove `return`
    |
728 -         return seal_hash;
728 +         seal_hash
    |

warning: unneeded `return` statement
   --> pallets/subtensor/src/registration.rs:744:9
    |
744 |         return (nonce, Self::hash_to_vec(work));
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return
help: remove `return`
    |
744 -         return (nonce, Self::hash_to_vec(work));
744 +         (nonce, Self::hash_to_vec(work))
    |

warning: this expression creates a reference which is immediately dereferenced by the compiler
   --> pallets/subtensor/src/registration.rs:736:79
    |
736 |         let mut work:   H256    = Self::create_seal_hash(block_number, nonce, &hotkey);
    |                                                                               ^^^^^^^ help: change this to: `hotkey`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow

warning: this expression creates a reference which is immediately dereferenced by the compiler
   --> pallets/subtensor/src/registration.rs:741:64
    |
741 |             work = Self::create_seal_hash(block_number, nonce, &hotkey);
    |                                                                ^^^^^^^ help: change this to: `hotkey`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow

warning: unneeded `return` statement
   --> pallets/subtensor/src/registration.rs:900:9
    |
900 |         return Ok(Some(weight).into());
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return
help: remove `return`
    |
900 -         return Ok(Some(weight).into());
900 +         Ok(Some(weight).into())
    |

warning: equality checks against true are unnecessary
   --> pallets/subtensor/src/registration.rs:786:13
    |
786 |             Self::remove_balance_from_coldkey_account(&coldkey, swap_cost_as_balance) == true,
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try simplifying it as shown: `Self::remove_balance_from_coldkey_account(&coldkey, swap_cost_as_balance)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#bool_comparison

warning: unneeded `return` statement
   --> pallets/subtensor/src/registration.rs:905:9
    |
905 |         return NetworkRegistrationAllowed::<T>::get(netuid);
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return
help: remove `return`
    |
905 -         return NetworkRegistrationAllowed::<T>::get(netuid);
905 +         NetworkRegistrationAllowed::<T>::get(netuid)
    |

warning: unneeded `return` statement
   --> pallets/subtensor/src/registration.rs:917:9
    |
917 |         return NetworkPowRegistrationAllowed::<T>::get(netuid);
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return
help: remove `return`
    |
917 -         return NetworkPowRegistrationAllowed::<T>::get(netuid);
917 +         NetworkPowRegistrationAllowed::<T>::get(netuid)
    |

warning: unneeded `return` statement
   --> pallets/subtensor/src/registration.rs:929:9
    |
929 |         return TargetRegistrationsPerInterval::<T>::get(netuid);
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return
help: remove `return`
    |
929 -         return TargetRegistrationsPerInterval::<T>::get(netuid);
929 +         TargetRegistrationsPerInterval::<T>::get(netuid)
    |

warning: unneeded `return` statement
   --> pallets/subtensor/src/registration.rs:941:9
    |
941 |         return MaxRegistrationsPerBlock::<T>::get(netuid);
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return
help: remove `return`
    |
941 -         return MaxRegistrationsPerBlock::<T>::get(netuid);
941 +         MaxRegistrationsPerBlock::<T>::get(netuid)
    |

warning: unneeded `return` statement
    --> pallets/subtensor/src/registration.rs:1103:9
     |
1103 |         return Ok(());
     |         ^^^^^^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return
help: remove `return`
     |
1103 -         return Ok(());
1103 +         Ok(())
     |

warning: unneeded `return` statement
  --> pallets/subtensor/src/emission.rs:12:9
   |
12 |         return EmissionValues::<T>::get(netuid);
   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return
help: remove `return`
   |
12 -         return EmissionValues::<T>::get(netuid);
12 +         EmissionValues::<T>::get(netuid)
   |

warning: unneeded `return` statement
  --> pallets/subtensor/src/emission.rs:48:9
   |
48 |         return Ok(());
   |         ^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return
help: remove `return`
   |
48 -         return Ok(());
48 +         Ok(())
   |

warning: unneeded `return` statement
   --> pallets/subtensor/src/user.rs:126:9
    |
126 |         return Ok(());
    |         ^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return
help: remove `return`
    |
126 -         return Ok(());
126 +         Ok(())
    |

warning: equality checks against true are unnecessary
  --> pallets/subtensor/src/user.rs:90:17
   |
90 |                 Self::remove_balance_from_coldkey_account(&coldkey, lock_as_balance.unwrap()) == true,
   |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try simplifying it as shown: `Self::remove_balance_from_coldkey_account(&coldkey, lock_as_balance.unwrap())`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#bool_comparison

warning: unneeded `return` statement
   --> pallets/subtensor/src/user.rs:179:9
    |
179 |         return Ok(());
    |         ^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return
help: remove `return`
    |
179 -         return Ok(());
179 +         Ok(())
    |

warning: unneeded `return` statement
  --> pallets/subtensor/src/root.rs:69:9
   |
69 |         return 0;
   |         ^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return
help: remove `return`
   |
69 -         return 0;
69 +         0
   |

warning: unneeded `return` statement
  --> pallets/subtensor/src/root.rs:81:9
   |
81 |         return TotalNetworks::<T>::get();
   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return
help: remove `return`
   |
81 -         return TotalNetworks::<T>::get();
81 +         TotalNetworks::<T>::get()
   |

warning: unneeded `return` statement
  --> pallets/subtensor/src/root.rs:93:9
   |
93 |         return Self::get_subnetwork_n(Self::get_root_netuid());
   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return
help: remove `return`
   |
93 -         return Self::get_subnetwork_n(Self::get_root_netuid());
93 +         Self::get_subnetwork_n(Self::get_root_netuid())
   |

warning: unneeded `return` statement
   --> pallets/subtensor/src/root.rs:106:9
    |
106 |         return Self::get_max_allowed_uids(Self::get_root_netuid());
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return
help: remove `return`
    |
106 -         return Self::get_max_allowed_uids(Self::get_root_netuid());
106 +         Self::get_max_allowed_uids(Self::get_root_netuid())
    |

warning: unneeded `return` statement
   --> pallets/subtensor/src/root.rs:134:9
    |
134 |         return false;
    |         ^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return
help: remove `return`
    |
134 -         return false;
134 +         false
    |

warning: unneeded `return` statement
   --> pallets/subtensor/src/root.rs:340:9
    |
340 |         return Self::set_emission_values(&netuids, emission_u64);
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return
help: remove `return`
    |
340 -         return Self::set_emission_values(&netuids, emission_u64);
340 +         Self::set_emission_values(&netuids, emission_u64)
    |

warning: you seem to be trying to use `match` for destructuring a single pattern. Consider using `if let`
   --> pallets/subtensor/src/root.rs:273:17
    |
273 | /                 match trust_score.checked_div(total_stake) 
274 | |                 {
275 | |                     Some(quotient) => 
276 | |                     {
...   |
280 | |                     None => {}
281 | |                 }
    | |_________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_match
help: try
    |
273 ~                 if let Some(quotient) = trust_score.checked_div(total_stake) {
274 +                     *trust_score = quotient;
275 +                 }
    |

warning: unneeded `return` statement
   --> pallets/subtensor/src/root.rs:388:9
    |
388 |         return lock_cost;
    |         ^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return
help: remove `return`
    |
388 -         return lock_cost;
388 +         lock_cost
    |

warning: unneeded `return` statement
   --> pallets/subtensor/src/root.rs:443:17
    |
443 |                 return *netuid;
    |                 ^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return
help: remove `return`
    |
443 -                 return *netuid;
443 +                 *netuid
    |

warning: unneeded `return` statement
   --> pallets/subtensor/src/root.rs:447:17
    |
447 |                 return 0;
    |                 ^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return
help: remove `return`
    |
447 -                 return 0;
447 +                 0
    |

warning: this function has too many arguments (9/7)
  --> pallets/subtensor/src/axon.rs:53:5
   |
53 | /     pub fn do_serve_axon(origin: T::RuntimeOrigin,  netuid: u16, version: u32, ip: u128, port: u16, ip_type: u8, protocol: u8, placeholde...
54 | |         -> dispatch::DispatchResult 
   | |___________________________________^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#too_many_arguments
   = note: `#[warn(clippy::too_many_arguments)]` on by default

warning: unneeded `return` statement
   --> pallets/subtensor/src/axon.rs:126:9
    |
126 |         return Ok(());
    |         ^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return
help: remove `return`
    |
126 -         return Ok(());
126 +         Ok(())
    |

warning: unneeded `return` statement
   --> pallets/subtensor/src/axon.rs:131:9
    |
131 |         return Axons::<T>::contains_key( netuid, hotkey );
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return
help: remove `return`
    |
131 -         return Axons::<T>::contains_key( netuid, hotkey );
131 +         Axons::<T>::contains_key( netuid, hotkey )
    |

warning: unneeded `return` statement
   --> pallets/subtensor/src/axon.rs:138:13
    |
138 |             return Axons::<T>::get( netuid, hotkey ).unwrap();
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return
help: remove `return`
    |
138 -             return Axons::<T>::get( netuid, hotkey ).unwrap();
138 +             Axons::<T>::get( netuid, hotkey ).unwrap()
    |

warning: unneeded `return` statement
   --> pallets/subtensor/src/axon.rs:142:13
    |
142 | /             return AxonInfo 
143 | |             { 
144 | |                 block:          0,
145 | |                 version:        0,
...   |
151 | |                 placeholder2:   0
152 | |             }
    | |_____________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return
help: remove `return`
    |
142 ~             AxonInfo 
143 +             { 
144 +                 block:          0,
145 +                 version:        0,
146 +                 ip:             0,
147 +                 port:           0,
148 +                 ip_type:        0,
149 +                 protocol:       0,
150 +                 placeholder1:   0,
151 +                 placeholder2:   0
152 +             }
    |

warning: unneeded `return` statement
   --> pallets/subtensor/src/axon.rs:162:9
    |
162 |         return rate_limit == 0 || last_serve == 0 || current_block - last_serve >= rate_limit;
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return
help: remove `return`
    |
162 -         return rate_limit == 0 || last_serve == 0 || current_block - last_serve >= rate_limit;
162 +         rate_limit == 0 || last_serve == 0 || current_block - last_serve >= rate_limit
    |

warning: unneeded `return` statement
   --> pallets/subtensor/src/axon.rs:172:3
    |
172 |         return Ok(true);
    |         ^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return
help: remove `return`
    |
172 -         return Ok(true);
172 +         Ok(true)
    |

error: this comparison involving the minimum or maximum element for this type contains a case that is always true or always false
   --> pallets/subtensor/src/axon.rs:167:6
    |
167 |         if axon_info.port.clamp(0, u16::MAX) <= 0 
    |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: because `0` is the minimum value for this type, the case where the two sides are not equal never occurs, consider using `axon_info.port.clamp(0, u16::MAX) == 0` instead
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#absurd_extreme_comparisons
    = note: `#[deny(clippy::absurd_extreme_comparisons)]` on by default

warning: unneeded `return` statement
   --> pallets/subtensor/src/prometheus.rs:116:9
    |
116 |         return Ok(());
    |         ^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return
help: remove `return`
    |
116 -         return Ok(());
116 +         Ok(())
    |

warning: unneeded `return` statement
   --> pallets/subtensor/src/prometheus.rs:126:3
    |
126 |         return Ok(true);
    |         ^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return
help: remove `return`
    |
126 -         return Ok(true);
126 +         Ok(true)
    |

error: this comparison involving the minimum or maximum element for this type contains a case that is always true or always false
   --> pallets/subtensor/src/prometheus.rs:121:6
    |
121 |         if prom_info.port.clamp(0, u16::MAX) <= 0 
    |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: because `0` is the minimum value for this type, the case where the two sides are not equal never occurs, consider using `prom_info.port.clamp(0, u16::MAX) == 0` instead
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#absurd_extreme_comparisons

warning: unneeded `return` statement
   --> pallets/subtensor/src/prometheus.rs:134:9
    |
134 |         return rate_limit == 0 || last_serve == 0 || current_block - last_serve >= rate_limit;
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return
help: remove `return`
    |
134 -         return rate_limit == 0 || last_serve == 0 || current_block - last_serve >= rate_limit;
134 +         rate_limit == 0 || last_serve == 0 || current_block - last_serve >= rate_limit
    |

warning: unneeded `return` statement
   --> pallets/subtensor/src/prometheus.rs:139:9
    |
139 |         return Prometheus::<T>::contains_key( netuid, hotkey );
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return
help: remove `return`
    |
139 -         return Prometheus::<T>::contains_key( netuid, hotkey );
139 +         Prometheus::<T>::contains_key( netuid, hotkey )
    |

warning: unneeded `return` statement
   --> pallets/subtensor/src/prometheus.rs:146:13
    |
146 |             return Prometheus::<T>::get( netuid, hotkey ).unwrap();
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return
help: remove `return`
    |
146 -             return Prometheus::<T>::get( netuid, hotkey ).unwrap();
146 +             Prometheus::<T>::get( netuid, hotkey ).unwrap()
    |

warning: unneeded `return` statement
   --> pallets/subtensor/src/prometheus.rs:150:13
    |
150 | /             return PrometheusInfo 
151 | |             { 
152 | |                 block:      0,
153 | |                 version:    0,
...   |
156 | |                 ip_type:    0,
157 | |             }
    | |_____________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return
help: remove `return`
    |
150 ~             PrometheusInfo 
151 +             { 
152 +                 block:      0,
153 +                 version:    0,
154 +                 ip:         0,
155 +                 port:       0,
156 +                 ip_type:    0,
157 +             }
    |

warning: unneeded `return` statement
  --> pallets/subtensor/src/serving.rs:19:9
   |
19 |         return ip_type == 4 || ip_type == 6;
   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return
help: remove `return`
   |
19 -         return ip_type == 4 || ip_type == 6;
19 +         ip_type == 4 || ip_type == 6
   |

warning: unneeded `return` statement
  --> pallets/subtensor/src/serving.rs:29:37
   |
29 |                 0 | 0x7f000001 => { return false; },
   |                                     ^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return
help: remove `return`
   |
29 -                 0 | 0x7f000001 => { return false; },
29 +                 0 | 0x7f000001 => { false},
   |

warning: unneeded `return` statement
  --> pallets/subtensor/src/serving.rs:30:54
   |
30 |                 _ => { if addr >= u32::MAX as u128 { return false; } else { return true; } }
   |                                                      ^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return
help: remove `return`
   |
30 -                 _ => { if addr >= u32::MAX as u128 { return false; } else { return true; } }
30 +                 _ => { if addr >= u32::MAX as u128 { false} else { return true; } }
   |

warning: unneeded `return` statement
  --> pallets/subtensor/src/serving.rs:30:77
   |
30 |                 _ => { if addr >= u32::MAX as u128 { return false; } else { return true; } }
   |                                                                             ^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return
help: remove `return`
   |
30 -                 _ => { if addr >= u32::MAX as u128 { return false; } else { return true; } }
30 +                 _ => { if addr >= u32::MAX as u128 { return false; } else { true} }
   |

warning: unneeded `return` statement
  --> pallets/subtensor/src/serving.rs:34:40
   |
34 |                 0 | u128::MAX | 1 => { return false; },
   |                                        ^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return
help: remove `return`
   |
34 -                 0 | u128::MAX | 1 => { return false; },
34 +                 0 | u128::MAX | 1 => { false},
   |

warning: unneeded `return` statement
  --> pallets/subtensor/src/serving.rs:35:24
   |
35 |                 _ => { return true; }
   |                        ^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return
help: remove `return`
   |
35 -                 _ => { return true; }
35 +                 _ => { true}
   |

warning: unneeded `return` statement
  --> pallets/subtensor/src/serving.rs:37:20
   |
37 |             _ => { return false; }
   |                    ^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return
help: remove `return`
   |
37 -             _ => { return false; }
37 +             _ => { false}
   |

warning: this if-then-else expression returns a bool literal
  --> pallets/subtensor/src/serving.rs:30:24
   |
30 |                 _ => { if addr >= u32::MAX as u128 { return false; } else { return true; } }
   |                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: you can reduce it to: `return addr < u32::MAX as u128`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_bool
   = note: `#[warn(clippy::needless_bool)]` on by default

warning: this expression creates a reference which is immediately dereferenced by the compiler
 --> pallets/subtensor/src/balance.rs:5:39
  |
5 |         T::Currency::deposit_creating(&coldkey, amount); // Infallibe
  |                                       ^^^^^^^^ help: change this to: `coldkey`
  |
  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow

warning: this expression creates a reference which is immediately dereferenced by the compiler
  --> pallets/subtensor/src/balance.rs:10:43
   |
10 |         T::Currency::make_free_balance_be(&coldkey, amount);
   |                                           ^^^^^^^^ help: change this to: `coldkey`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow

warning: unneeded `return` statement
  --> pallets/subtensor/src/balance.rs:32:9
   |
32 |         return can_withdraw;
   |         ^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return
help: remove `return`
   |
32 -         return can_withdraw;
32 +         can_withdraw
   |

warning: this expression creates a reference which is immediately dereferenced by the compiler
  --> pallets/subtensor/src/balance.rs:25:13
   |
25 |             &coldkey,
   |             ^^^^^^^^ help: change this to: `coldkey`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow

warning: unneeded `return` statement
  --> pallets/subtensor/src/balance.rs:37:9
   |
37 |         return T::Currency::free_balance(&coldkey);
   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return
help: remove `return`
   |
37 -         return T::Currency::free_balance(&coldkey);
37 +         T::Currency::free_balance(&coldkey)
   |

warning: this expression creates a reference which is immediately dereferenced by the compiler
  --> pallets/subtensor/src/balance.rs:37:42
   |
37 |         return T::Currency::free_balance(&coldkey);
   |                                          ^^^^^^^^ help: change this to: `coldkey`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow

warning: unneeded `return` statement
  --> pallets/subtensor/src/balance.rs:43:9
   |
43 | /         return match T::Currency::withdraw(
44 | |             &coldkey,
45 | |             amount,
46 | |             WithdrawReasons::except(WithdrawReasons::TIP),
...  |
50 | |             Err(_error) => { log::info!("{:?}", _error); false },
51 | |         };
   | |_________^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return
help: remove `return`
   |
43 ~         match T::Currency::withdraw(
44 +             &coldkey,
45 +             amount,
46 +             WithdrawReasons::except(WithdrawReasons::TIP),
47 +             ExistenceRequirement::KeepAlive,
48 +         ) {
49 +             Ok(_result) => true,
50 +             Err(_error) => { log::info!("{:?}", _error); false },
51 ~         }
   |

warning: this expression creates a reference which is immediately dereferenced by the compiler
  --> pallets/subtensor/src/balance.rs:44:13
   |
44 |             &coldkey,
   |             ^^^^^^^^ help: change this to: `coldkey`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow

warning: unneeded `return` statement
   --> pallets/subtensor/src/staking.rs:117:9
    |
117 |         return Ok(());
    |         ^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return
help: remove `return`
    |
117 -         return Ok(());
117 +         Ok(())
    |

warning: unneeded `return` statement
   --> pallets/subtensor/src/staking.rs:241:9
    |
241 |         return Ok(());
    |         ^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return
help: remove `return`
    |
241 -         return Ok(());
241 +         Ok(())
    |

warning: equality checks against true are unnecessary
   --> pallets/subtensor/src/staking.rs:216:17
    |
216 |                 Self::remove_balance_from_coldkey_account(&coldkey, stake_as_balance.unwrap()) == true,
    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try simplifying it as shown: `Self::remove_balance_from_coldkey_account(&coldkey, stake_as_balance.unwrap())`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#bool_comparison

warning: unneeded `return` statement
   --> pallets/subtensor/src/staking.rs:369:9
    |
369 |         return Ok(());
    |         ^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return
help: remove `return`
    |
369 -         return Ok(());
369 +         Ok(())
    |

warning: unneeded `return` statement
   --> pallets/subtensor/src/staking.rs:376:9
    |
376 |         return TotalStake::<T>::get();
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return
help: remove `return`
    |
376 -         return TotalStake::<T>::get();
376 +         TotalStake::<T>::get()
    |

warning: unneeded `return` statement
   --> pallets/subtensor/src/staking.rs:397:9
    |
397 |         return TotalHotkeyStake::<T>::get(hotkey);
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return
help: remove `return`
    |
397 -         return TotalHotkeyStake::<T>::get(hotkey);
397 +         TotalHotkeyStake::<T>::get(hotkey)
    |

warning: unneeded `return` statement
   --> pallets/subtensor/src/staking.rs:404:9
    |
404 |         return TotalColdkeyStake::<T>::get(coldkey);
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return
help: remove `return`
    |
404 -         return TotalColdkeyStake::<T>::get(coldkey);
404 +         TotalColdkeyStake::<T>::get(coldkey)
    |

warning: unneeded `return` statement
   --> pallets/subtensor/src/staking.rs:411:9
    |
411 |         return Stake::<T>::get(hotkey, coldkey);
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return
help: remove `return`
    |
411 -         return Stake::<T>::get(hotkey, coldkey);
411 +         Stake::<T>::get(hotkey, coldkey)
    |

warning: unneeded `return` statement
   --> pallets/subtensor/src/staking.rs:429:9
    |
429 |         return Self::get_stake_for_coldkey_and_hotkey(coldkey, hotkey) >= decrement;
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return
help: remove `return`
    |
429 -         return Self::get_stake_for_coldkey_and_hotkey(coldkey, hotkey) >= decrement;
429 +         Self::get_stake_for_coldkey_and_hotkey(coldkey, hotkey) >= decrement
    |

warning: called `unwrap` on `stake_i_as_balance` after checking its variant with `is_none`
   --> pallets/subtensor/src/staking.rs:527:21
    |
509 |             if stake_i_as_balance.is_none() 
    |             ------------------------------- help: try: `if let Some(..) = stake_i_as_balance`
...
527 |                     stake_i_as_balance.unwrap(),
    |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_unwrap
    = note: `#[warn(clippy::unnecessary_unwrap)]` on by default

warning: unneeded `return` statement
  --> pallets/subtensor/src/uids.rs:36:9
   |
36 |         return SubnetworkN::<T>::get(netuid); 
   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return
help: remove `return`
   |
36 -         return SubnetworkN::<T>::get(netuid); 
36 +         SubnetworkN::<T>::get(netuid)
   |

warning: unneeded `return` statement
   --> pallets/subtensor/src/uids.rs:119:9
    |
119 |         return Keys::<T>::contains_key(netuid, uid);
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return
help: remove `return`
    |
119 -         return Keys::<T>::contains_key(netuid, uid);
119 +         Keys::<T>::contains_key(netuid, uid)
    |

warning: unneeded `return` statement
   --> pallets/subtensor/src/uids.rs:126:9
    |
126 |         return Uids::<T>::contains_key(netuid, hotkey) 
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return
help: remove `return`
    |
126 |         Uids::<T>::contains_key(netuid, hotkey) 
    |

warning: unneeded `return` statement
   --> pallets/subtensor/src/uids.rs:133:9
    |
133 |         return Keys::<T>::try_get(netuid, neuron_uid).map_err(|_err| Error::<T>::NotRegistered.into());
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return
help: remove `return`
    |
133 -         return Keys::<T>::try_get(netuid, neuron_uid).map_err(|_err| Error::<T>::NotRegistered.into());
133 +         Keys::<T>::try_get(netuid, neuron_uid).map_err(|_err| Error::<T>::NotRegistered.into())
    |

warning: unneeded `return` statement
   --> pallets/subtensor/src/uids.rs:140:9
    |
140 |         return Uids::<T>::try_get(netuid, &hotkey).map_err(|_err| Error::<T>::NotRegistered.into());
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return
help: remove `return`
    |
140 -         return Uids::<T>::try_get(netuid, &hotkey).map_err(|_err| Error::<T>::NotRegistered.into());
140 +         Uids::<T>::try_get(netuid, &hotkey).map_err(|_err| Error::<T>::NotRegistered.into())
    |

warning: the borrowed expression implements the required traits
   --> pallets/subtensor/src/uids.rs:140:43
    |
140 |         return Uids::<T>::try_get(netuid, &hotkey).map_err(|_err| Error::<T>::NotRegistered.into());
    |                                           ^^^^^^^ help: change this to: `hotkey`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrows_for_generic_args

warning: unneeded `return` statement
   --> pallets/subtensor/src/uids.rs:148:13
    |
148 |             return Self::get_total_stake_for_hotkey(&Self::get_hotkey_for_net_and_uid( netuid, neuron_uid ).unwrap());
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return
help: remove `return`
    |
148 -             return Self::get_total_stake_for_hotkey(&Self::get_hotkey_for_net_and_uid( netuid, neuron_uid ).unwrap());
148 +             Self::get_total_stake_for_hotkey(&Self::get_hotkey_for_net_and_uid( netuid, neuron_uid ).unwrap())
    |

warning: unneeded `return` statement
   --> pallets/subtensor/src/uids.rs:152:13
    |
152 |             return 0;
    |             ^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return
help: remove `return`
    |
152 -             return 0;
152 +             0
    |

warning: unneeded `return` statement
   --> pallets/subtensor/src/uids.rs:167:9
    |
167 |         return number_of_subnets;
    |         ^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return
help: remove `return`
    |
167 -         return number_of_subnets;
167 +         number_of_subnets
    |

warning: manual implementation of an assign operation
   --> pallets/subtensor/src/uids.rs:164:13
    |
164 |             number_of_subnets = number_of_subnets + 1;
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: replace it with: `number_of_subnets += 1`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#assign_op_pattern

warning: unneeded `return` statement
   --> pallets/subtensor/src/uids.rs:183:9
    |
183 |         return all_networks;
    |         ^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return
help: remove `return`
    |
183 -         return all_networks;
183 +         all_networks
    |

warning: unneeded `return` statement
   --> pallets/subtensor/src/uids.rs:197:9
    |
197 |         return false;
    |         ^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return
help: remove `return`
    |
197 -         return false;
197 +         false
    |

warning: unneeded `return` statement
   --> pallets/subtensor/src/uids.rs:221:9
    |
221 | /         return <NetworksAdded<T> as IterableStorageMap<u16, bool>>::iter()
222 | |             .map(|(netuid, _)| netuid)
223 | |             .collect();
    | |______________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return
help: remove `return`
    |
221 ~         <NetworksAdded<T> as IterableStorageMap<u16, bool>>::iter()
222 +             .map(|(netuid, _)| netuid)
223 ~             .collect()
    |

warning: unneeded `return` statement
  --> pallets/subtensor/src/subnet.rs:13:9
   |
13 |         return SubnetLimit::<T>::get();
   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return
help: remove `return`
   |
13 -         return SubnetLimit::<T>::get();
13 +         SubnetLimit::<T>::get()
   |

warning: unneeded `return` statement
  --> pallets/subtensor/src/subnet.rs:67:9
   |
67 |         return Rank::<T>::get(netuid);
   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return
help: remove `return`
   |
67 -         return Rank::<T>::get(netuid);
67 +         Rank::<T>::get(netuid)
   |

warning: unneeded `return` statement
  --> pallets/subtensor/src/subnet.rs:72:9
   |
72 |         return Trust::<T>::get(netuid);
   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return
help: remove `return`
   |
72 -         return Trust::<T>::get(netuid);
72 +         Trust::<T>::get(netuid)
   |

warning: unneeded `return` statement
  --> pallets/subtensor/src/subnet.rs:77:9
   |
77 |         return Active::<T>::get(netuid);
   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return
help: remove `return`
   |
77 -         return Active::<T>::get(netuid);
77 +         Active::<T>::get(netuid)
   |

warning: unneeded `return` statement
  --> pallets/subtensor/src/subnet.rs:82:9
   |
82 |         return Emission::<T>::get(netuid);
   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return
help: remove `return`
   |
82 -         return Emission::<T>::get(netuid);
82 +         Emission::<T>::get(netuid)
   |

warning: unneeded `return` statement
  --> pallets/subtensor/src/subnet.rs:87:9
   |
87 |         return Consensus::<T>::get(netuid);
   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return
help: remove `return`
   |
87 -         return Consensus::<T>::get(netuid);
87 +         Consensus::<T>::get(netuid)
   |

warning: unneeded `return` statement
  --> pallets/subtensor/src/subnet.rs:92:9
   |
92 |         return Incentive::<T>::get(netuid);
   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return
help: remove `return`
   |
92 -         return Incentive::<T>::get(netuid);
92 +         Incentive::<T>::get(netuid)
   |

warning: unneeded `return` statement
  --> pallets/subtensor/src/subnet.rs:97:9
   |
97 |         return Dividends::<T>::get(netuid);
   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return
help: remove `return`
   |
97 -         return Dividends::<T>::get(netuid);
97 +         Dividends::<T>::get(netuid)
   |

warning: unneeded `return` statement
   --> pallets/subtensor/src/subnet.rs:102:9
    |
102 |         return LastUpdate::<T>::get(netuid);
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return
help: remove `return`
    |
102 -         return LastUpdate::<T>::get(netuid);
102 +         LastUpdate::<T>::get(netuid)
    |

warning: unneeded `return` statement
   --> pallets/subtensor/src/subnet.rs:107:9
    |
107 |         return PruningScores::<T>::get(netuid);
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return
help: remove `return`
    |
107 -         return PruningScores::<T>::get(netuid);
107 +         PruningScores::<T>::get(netuid)
    |

warning: unneeded `return` statement
   --> pallets/subtensor/src/subnet.rs:117:9
    |
117 |         return ValidatorPermit::<T>::get(netuid);
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return
help: remove `return`
    |
117 -         return ValidatorPermit::<T>::get(netuid);
117 +         ValidatorPermit::<T>::get(netuid)
    |

warning: unneeded `return` statement
   --> pallets/subtensor/src/subnet.rs:122:9
    |
122 |         return Tempo::<T>::get(netuid);
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return
help: remove `return`
    |
122 -         return Tempo::<T>::get(netuid);
122 +         Tempo::<T>::get(netuid)
    |

warning: unneeded `return` statement
   --> pallets/subtensor/src/subnet.rs:127:9
    |
127 |         return EmissionValues::<T>::get(netuid);
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return
help: remove `return`
    |
127 -         return EmissionValues::<T>::get(netuid);
127 +         EmissionValues::<T>::get(netuid)
    |

warning: unneeded `return` statement
   --> pallets/subtensor/src/subnet.rs:132:9
    |
132 |         return PendingEmission::<T>::get(netuid);
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return
help: remove `return`
    |
132 -         return PendingEmission::<T>::get(netuid);
132 +         PendingEmission::<T>::get(netuid)
    |

warning: unneeded `return` statement
   --> pallets/subtensor/src/subnet.rs:137:9
    |
137 |         return LastAdjustmentBlock::<T>::get(netuid)
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return
help: remove `return`
    |
137 |         LastAdjustmentBlock::<T>::get(netuid)
    |

warning: unneeded `return` statement
   --> pallets/subtensor/src/subnet.rs:142:9
    |
142 |         return BlocksSinceLastStep::<T>::get(netuid)
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return
help: remove `return`
    |
142 |         BlocksSinceLastStep::<T>::get(netuid)
    |

warning: unneeded `return` statement
   --> pallets/subtensor/src/subnet.rs:147:9
    |
147 |         return U256::from(Self::get_difficulty_as_u64(netuid));
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return
help: remove `return`
    |
147 -         return U256::from(Self::get_difficulty_as_u64(netuid));
147 +         U256::from(Self::get_difficulty_as_u64(netuid))
    |

warning: unneeded `return` statement
   --> pallets/subtensor/src/subnet.rs:152:9
    |
152 |         return RegistrationsThisBlock::<T>::get(netuid);
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return
help: remove `return`
    |
152 -         return RegistrationsThisBlock::<T>::get(netuid);
152 +         RegistrationsThisBlock::<T>::get(netuid)
    |

warning: unneeded `return` statement
   --> pallets/subtensor/src/subnet.rs:157:9
    |
157 |         return LastMechansimStepBlock::<T>::get(netuid);
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return
help: remove `return`
    |
157 -         return LastMechansimStepBlock::<T>::get(netuid);
157 +         LastMechansimStepBlock::<T>::get(netuid)
    |

warning: unneeded `return` statement
   --> pallets/subtensor/src/subnet.rs:162:9
    |
162 |         return RegistrationsThisInterval::<T>::get(netuid);
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return
help: remove `return`
    |
162 -         return RegistrationsThisInterval::<T>::get(netuid);
162 +         RegistrationsThisInterval::<T>::get(netuid)
    |

warning: unneeded `return` statement
   --> pallets/subtensor/src/subnet.rs:167:9
    |
167 |         return POWRegistrationsThisInterval::<T>::get(netuid);
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return
help: remove `return`
    |
167 -         return POWRegistrationsThisInterval::<T>::get(netuid);
167 +         POWRegistrationsThisInterval::<T>::get(netuid)
    |

warning: unneeded `return` statement
   --> pallets/subtensor/src/subnet.rs:172:9
    |
172 |         return BurnRegistrationsThisInterval::<T>::get(netuid);
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return
help: remove `return`
    |
172 -         return BurnRegistrationsThisInterval::<T>::get(netuid);
172 +         BurnRegistrationsThisInterval::<T>::get(netuid)
    |

warning: unneeded `return` statement
   --> pallets/subtensor/src/subnet.rs:177:9
    |
177 |         return BlockAtRegistration::<T>::get(netuid, neuron_uid);
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return
help: remove `return`
    |
177 -         return BlockAtRegistration::<T>::get(netuid, neuron_uid);
177 +         BlockAtRegistration::<T>::get(netuid, neuron_uid)
    |

warning: unneeded `return` statement
   --> pallets/subtensor/src/subnet.rs:182:9
    |
182 |         return AdjustmentInterval::<T>::get(netuid);
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return
help: remove `return`
    |
182 -         return AdjustmentInterval::<T>::get(netuid);
182 +         AdjustmentInterval::<T>::get(netuid)
    |

warning: unneeded `return` statement
   --> pallets/subtensor/src/subnet.rs:194:9
    |
194 |         return AdjustmentAlpha::<T>::get(netuid);
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return
help: remove `return`
    |
194 -         return AdjustmentAlpha::<T>::get(netuid);
194 +         AdjustmentAlpha::<T>::get(netuid)
    |

warning: unneeded `return` statement
   --> pallets/subtensor/src/subnet.rs:206:9
    |
206 |         return ValidatorPruneLen::<T>::get(netuid);
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return
help: remove `return`
    |
206 -         return ValidatorPruneLen::<T>::get(netuid);
206 +         ValidatorPruneLen::<T>::get(netuid)
    |

warning: unneeded `return` statement
   --> pallets/subtensor/src/subnet.rs:218:9
    |
218 |         return ScalingLawPower::<T>::get(netuid);
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return
help: remove `return`
    |
218 -         return ScalingLawPower::<T>::get(netuid);
218 +         ScalingLawPower::<T>::get(netuid)
    |

warning: unneeded `return` statement
   --> pallets/subtensor/src/subnet.rs:230:9
    |
230 |         return ImmunityPeriod::<T>::get(netuid);
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return
help: remove `return`
    |
230 -         return ImmunityPeriod::<T>::get(netuid);
230 +         ImmunityPeriod::<T>::get(netuid)
    |

warning: unneeded `return` statement
   --> pallets/subtensor/src/subnet.rs:242:9
    |
242 |         return MinDifficulty::<T>::get(netuid);
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return
help: remove `return`
    |
242 -         return MinDifficulty::<T>::get(netuid);
242 +         MinDifficulty::<T>::get(netuid)
    |

warning: unneeded `return` statement
   --> pallets/subtensor/src/subnet.rs:254:9
    |
254 |         return MaxDifficulty::<T>::get(netuid);
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return
help: remove `return`
    |
254 -         return MaxDifficulty::<T>::get(netuid);
254 +         MaxDifficulty::<T>::get(netuid)
    |

warning: unneeded `return` statement
   --> pallets/subtensor/src/subnet.rs:266:9
    |
266 |         return Kappa::<T>::get(netuid);
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return
help: remove `return`
    |
266 -         return Kappa::<T>::get(netuid);
266 +         Kappa::<T>::get(netuid)
    |

warning: unneeded `return` statement
   --> pallets/subtensor/src/subnet.rs:278:9
    |
278 |         return Rho::<T>::get(netuid);
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return
help: remove `return`
    |
278 -         return Rho::<T>::get(netuid);
278 +         Rho::<T>::get(netuid)
    |

warning: unneeded `return` statement
   --> pallets/subtensor/src/subnet.rs:288:9
    |
288 |         return ActivityCutoff::<T>::get(netuid);
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return
help: remove `return`
    |
288 -         return ActivityCutoff::<T>::get(netuid);
288 +         ActivityCutoff::<T>::get(netuid)
    |

warning: unneeded `return` statement
   --> pallets/subtensor/src/subnet.rs:299:9
    |
299 |         return SubnetOwner::<T>::get(netuid);
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return
help: remove `return`
    |
299 -         return SubnetOwner::<T>::get(netuid);
299 +         SubnetOwner::<T>::get(netuid)
    |

warning: unneeded `return` statement
   --> pallets/subtensor/src/subnet.rs:304:9
    |
304 |         return SubnetOwnerCut::<T>::get();
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return
help: remove `return`
    |
304 -         return SubnetOwnerCut::<T>::get();
304 +         SubnetOwnerCut::<T>::get()
    |

warning: unneeded `return` statement
   --> pallets/subtensor/src/subnet.rs:316:9
    |
316 |         return Burn::<T>::get(netuid);
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return
help: remove `return`
    |
316 -         return Burn::<T>::get(netuid);
316 +         Burn::<T>::get(netuid)
    |

warning: unneeded `return` statement
   --> pallets/subtensor/src/subnet.rs:326:9
    |
326 |         return MinBurn::<T>::get(netuid);
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return
help: remove `return`
    |
326 -         return MinBurn::<T>::get(netuid);
326 +         MinBurn::<T>::get(netuid)
    |

warning: unneeded `return` statement
   --> pallets/subtensor/src/subnet.rs:338:9
    |
338 |         return MaxBurn::<T>::get(netuid);
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return
help: remove `return`
    |
338 -         return MaxBurn::<T>::get(netuid);
338 +         MaxBurn::<T>::get(netuid)
    |

warning: unneeded `return` statement
   --> pallets/subtensor/src/subnet.rs:350:9
    |
350 |         return Difficulty::<T>::get(netuid);
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return
help: remove `return`
    |
350 -         return Difficulty::<T>::get(netuid);
350 +         Difficulty::<T>::get(netuid)
    |

warning: unneeded `return` statement
   --> pallets/subtensor/src/subnet.rs:362:9
    |
362 |         return MaxAllowedValidators::<T>::get(netuid);
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return
help: remove `return`
    |
362 -         return MaxAllowedValidators::<T>::get(netuid);
362 +         MaxAllowedValidators::<T>::get(netuid)
    |

warning: unneeded `return` statement
   --> pallets/subtensor/src/subnet.rs:374:9
    |
374 |         return BondsMovingAverage::<T>::get(netuid);
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return
help: remove `return`
    |
374 -         return BondsMovingAverage::<T>::get(netuid);
374 +         BondsMovingAverage::<T>::get(netuid)
    |

warning: unneeded `return` statement
   --> pallets/subtensor/src/subnet.rs:394:9
    |
394 |         return Ok(());
    |         ^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return
help: remove `return`
    |
394 -         return Ok(());
394 +         Ok(())
    |

warning: unneeded `return` statement
   --> pallets/subtensor/src/subnet.rs:399:9
    |
399 |         return RAORecycledForRegistration::<T>::get(netuid);
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return
help: remove `return`
    |
399 -         return RAORecycledForRegistration::<T>::get(netuid);
399 +         RAORecycledForRegistration::<T>::get(netuid)
    |

warning: unneeded `return` statement
   --> pallets/subtensor/src/subnet.rs:483:9
    |
483 |         return NetworksAdded::<T>::get(netuid);
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return
help: remove `return`
    |
483 -         return NetworksAdded::<T>::get(netuid);
483 +         NetworksAdded::<T>::get(netuid)
    |

warning: this boolean expression can be simplified
   --> pallets/subtensor/src/subnet.rs:628:16
    |
628 |             if !reserved_amount_as_bal.is_some() 
    |                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `reserved_amount_as_bal.is_none()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#nonminimal_bool
    = note: `#[warn(clippy::nonminimal_bool)]` on by default

warning: unneeded `return` statement
   --> pallets/subtensor/src/subnet.rs:709:9
    |
709 |         return I32F32::from_num(Self::get_rho(netuid));
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return
help: remove `return`
    |
709 -         return I32F32::from_num(Self::get_rho(netuid));
709 +         I32F32::from_num(Self::get_rho(netuid))
    |

warning: unneeded `return` statement
   --> pallets/subtensor/src/subnet.rs:714:9
    |
714 |         return I32F32::from_num(Self::get_kappa(netuid)) / I32F32::from_num(u16::MAX);
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return
help: remove `return`
    |
714 -         return I32F32::from_num(Self::get_kappa(netuid)) / I32F32::from_num(u16::MAX);
714 +         I32F32::from_num(Self::get_kappa(netuid)) / I32F32::from_num(u16::MAX)
    |

warning: unneeded `return` statement
   --> pallets/subtensor/src/subnet.rs:728:9
    |
728 |         return vec_fixed64_to_fixed32(stake_64);
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return
help: remove `return`
    |
728 -         return vec_fixed64_to_fixed32(stake_64);
728 +         vec_fixed64_to_fixed32(stake_64)
    |

warning: the loop variable `neuron_uid` is used to index `stake_64`
   --> pallets/subtensor/src/subnet.rs:721:27
    |
721 |         for neuron_uid in 0..n 
    |                           ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_range_loop
help: consider using an iterator and enumerate()
    |
721 |         for (neuron_uid, <item>) in stake_64.iter_mut().enumerate().take(n) 
    |             ~~~~~~~~~~~~~~~~~~~~    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

warning: unneeded `return` statement
   --> pallets/subtensor/src/subnet.rs:743:9
    |
743 |         return block_at_registration;
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return
help: remove `return`
    |
743 -         return block_at_registration;
743 +         block_at_registration
    |

warning: the loop variable `neuron_uid` is used to index `block_at_registration`
   --> pallets/subtensor/src/subnet.rs:735:27
    |
735 |         for neuron_uid in 0..n 
    |                           ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_range_loop
help: consider using an iterator and enumerate()
    |
735 |         for (neuron_uid, <item>) in block_at_registration.iter_mut().enumerate().take(n) 
    |             ~~~~~~~~~~~~~~~~~~~~    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

warning: unneeded `return` statement
   --> pallets/subtensor/src/subnet.rs:762:9
    |
762 |         return bonds;
    |         ^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return
help: remove `return`
    |
762 -         return bonds;
762 +         bonds
    |

warning: unneeded `return` statement
   --> pallets/subtensor/src/subnet.rs:778:9
    |
778 |         return bonds;
    |         ^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return
help: remove `return`
    |
778 -         return bonds;
778 +         bonds
    |

warning: unneeded `return` statement
  --> pallets/subtensor/src/consensus.rs:49:9
   |
49 |         return Rank::<T>::get(netuid).into_iter().nth(uid as usize).unwrap_or(0u16);
   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return
help: remove `return`
   |
49 -         return Rank::<T>::get(netuid).into_iter().nth(uid as usize).unwrap_or(0u16);
49 +         Rank::<T>::get(netuid).into_iter().nth(uid as usize).unwrap_or(0u16)
   |

warning: unneeded `return` statement
  --> pallets/subtensor/src/consensus.rs:54:9
   |
54 |         return Trust::<T>::get(netuid).into_iter().nth(uid as usize).unwrap_or(0u16);
   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return
help: remove `return`
   |
54 -         return Trust::<T>::get(netuid).into_iter().nth(uid as usize).unwrap_or(0u16);
54 +         Trust::<T>::get(netuid).into_iter().nth(uid as usize).unwrap_or(0u16)
   |

warning: unneeded `return` statement
  --> pallets/subtensor/src/consensus.rs:59:9
   |
59 |         return Emission::<T>::get(netuid).into_iter().nth(uid as usize).unwrap_or(0u64);
   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return
help: remove `return`
   |
59 -         return Emission::<T>::get(netuid).into_iter().nth(uid as usize).unwrap_or(0u64);
59 +         Emission::<T>::get(netuid).into_iter().nth(uid as usize).unwrap_or(0u64)
   |

warning: unneeded `return` statement
  --> pallets/subtensor/src/consensus.rs:64:9
   |
64 |         return Active::<T>::get(netuid).into_iter().nth(uid as usize).unwrap_or(false);
   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return
help: remove `return`
   |
64 -         return Active::<T>::get(netuid).into_iter().nth(uid as usize).unwrap_or(false);
64 +         Active::<T>::get(netuid).into_iter().nth(uid as usize).unwrap_or(false)
   |

warning: unneeded `return` statement
  --> pallets/subtensor/src/consensus.rs:69:9
   |
69 |         return Consensus::<T>::get(netuid).into_iter().nth(uid as usize).unwrap_or(0u16);
   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return
help: remove `return`
   |
69 -         return Consensus::<T>::get(netuid).into_iter().nth(uid as usize).unwrap_or(0u16);
69 +         Consensus::<T>::get(netuid).into_iter().nth(uid as usize).unwrap_or(0u16)
   |

warning: unneeded `return` statement
  --> pallets/subtensor/src/consensus.rs:74:9
   |
74 |         return Incentive::<T>::get(netuid).into_iter().nth(uid as usize).unwrap_or(0u16);
   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return
help: remove `return`
   |
74 -         return Incentive::<T>::get(netuid).into_iter().nth(uid as usize).unwrap_or(0u16);
74 +         Incentive::<T>::get(netuid).into_iter().nth(uid as usize).unwrap_or(0u16)
   |

warning: unneeded `return` statement
  --> pallets/subtensor/src/consensus.rs:79:9
   |
79 |         return Dividends::<T>::get(netuid).into_iter().nth(uid as usize).unwrap_or(0u16);
   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return
help: remove `return`
   |
79 -         return Dividends::<T>::get(netuid).into_iter().nth(uid as usize).unwrap_or(0u16);
79 +         Dividends::<T>::get(netuid).into_iter().nth(uid as usize).unwrap_or(0u16)
   |

warning: unneeded `return` statement
  --> pallets/subtensor/src/consensus.rs:84:9
   |
84 |         return LastUpdate::<T>::get(netuid).into_iter().nth(uid as usize).unwrap_or(0u64);
   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return
help: remove `return`
   |
84 -         return LastUpdate::<T>::get(netuid).into_iter().nth(uid as usize).unwrap_or(0u64);
84 +         LastUpdate::<T>::get(netuid).into_iter().nth(uid as usize).unwrap_or(0u64)
   |

warning: unneeded `return` statement
  --> pallets/subtensor/src/consensus.rs:89:9
   |
89 |         return PruningScores::<T>::get(netuid).into_iter().nth(uid as usize).unwrap_or(u16::MAX);
   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return
help: remove `return`
   |
89 -         return PruningScores::<T>::get(netuid).into_iter().nth(uid as usize).unwrap_or(u16::MAX);
89 +         PruningScores::<T>::get(netuid).into_iter().nth(uid as usize).unwrap_or(u16::MAX)
   |

warning: unneeded `return` statement
  --> pallets/subtensor/src/consensus.rs:94:9
   |
94 |         return ValidatorTrust::<T>::get(netuid).into_iter().nth(uid as usize).unwrap_or(0u16);
   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return
help: remove `return`
   |
94 -         return ValidatorTrust::<T>::get(netuid).into_iter().nth(uid as usize).unwrap_or(0u16);
94 +         ValidatorTrust::<T>::get(netuid).into_iter().nth(uid as usize).unwrap_or(0u16)
   |

warning: unneeded `return` statement
  --> pallets/subtensor/src/consensus.rs:99:9
   |
99 |         return ValidatorPermit::<T>::get(netuid).into_iter().nth(uid as usize).unwrap_or(false);
   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return
help: remove `return`
   |
99 -         return ValidatorPermit::<T>::get(netuid).into_iter().nth(uid as usize).unwrap_or(false);
99 +         ValidatorPermit::<T>::get(netuid).into_iter().nth(uid as usize).unwrap_or(false)
   |

warning: unneeded `return` statement
  --> pallets/subtensor/src/token.rs:11:9
   |
11 |         return DefaultTake::<T>::get();
   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return
help: remove `return`
   |
11 -         return DefaultTake::<T>::get();
11 +         DefaultTake::<T>::get()
   |

warning: unneeded `return` statement
  --> pallets/subtensor/src/token.rs:28:9
   |
28 |         return SubnetLocked::<T>::get(netuid);
   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return
help: remove `return`
   |
28 -         return SubnetLocked::<T>::get(netuid);
28 +         SubnetLocked::<T>::get(netuid)
   |

warning: unneeded `return` statement
 --> pallets/subtensor/src/rate.rs:5:9
  |
5 |         return LastTxBlock::<T>::insert(key, block);
  |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  |
  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return
help: remove `return`
  |
5 -         return LastTxBlock::<T>::insert(key, block);
5 +         LastTxBlock::<T>::insert(key, block)
  |

warning: unneeded `return` statement
  --> pallets/subtensor/src/rate.rs:10:9
   |
10 |         return LastTxBlock::<T>::get(key);
   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return
help: remove `return`
   |
10 -         return LastTxBlock::<T>::get(key);
10 +         LastTxBlock::<T>::get(key)
   |

warning: unneeded `return` statement
  --> pallets/subtensor/src/rate.rs:21:9
   |
21 |         return current_block - prev_tx_block <= rate_limit;
   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return
help: remove `return`
   |
21 -         return current_block - prev_tx_block <= rate_limit;
21 +         current_block - prev_tx_block <= rate_limit
   |

warning: unneeded `return` statement
  --> pallets/subtensor/src/rate.rs:26:9
   |
26 |         return TxRateLimit::<T>::get();
   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return
help: remove `return`
   |
26 -         return TxRateLimit::<T>::get();
26 +         TxRateLimit::<T>::get()
   |

warning: unneeded `return` statement
  --> pallets/subtensor/src/rate.rs:38:9
   |
38 |         return ServingRateLimit::<T>::get(netuid);
   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return
help: remove `return`
   |
38 -         return ServingRateLimit::<T>::get(netuid);
38 +         ServingRateLimit::<T>::get(netuid)
   |

warning: unneeded `return` statement
  --> pallets/subtensor/src/rate.rs:50:9
   |
50 |         return NetworkRateLimit::<T>::get()
   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return
help: remove `return`
   |
50 |         NetworkRateLimit::<T>::get()
   |

warning: unneeded `return` statement
  --> pallets/subtensor/src/utils.rs:67:17
   |
67 |                 return Ok(());
   |                 ^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return
help: remove `return`
   |
67 -                 return Ok(());
67 +                 Ok(())
   |

warning: unneeded `return` statement
  --> pallets/subtensor/src/utils.rs:72:17
   |
72 |                 return Err(DispatchError::BadOrigin.into());
   |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return
help: remove `return`
   |
72 -                 return Err(DispatchError::BadOrigin.into());
72 +                 Err(DispatchError::BadOrigin.into())
   |

warning: unneeded `return` statement
  --> pallets/subtensor/src/utils.rs:77:17
   |
77 |                 return Ok(());
   |                 ^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return
help: remove `return`
   |
77 -                 return Ok(());
77 +                 Ok(())
   |

warning: unneeded `return` statement
  --> pallets/subtensor/src/utils.rs:82:17
   |
82 |                 return Err(x.into());
   |                 ^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return
help: remove `return`
   |
82 -                 return Err(x.into());
82 +                 Err(x.into())
   |

warning: useless conversion to the same type: `sp_runtime::DispatchError`
  --> pallets/subtensor/src/utils.rs:72:28
   |
72 |                 return Err(DispatchError::BadOrigin.into());
   |                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider removing `.into()`: `DispatchError::BadOrigin`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_conversion
   = note: `#[warn(clippy::useless_conversion)]` on by default

warning: unneeded `return` statement
   --> pallets/subtensor/src/utils.rs:102:9
    |
102 | /         return TryInto::try_into(<frame_system::Pallet<T>>::block_number())
103 | |             .ok()
104 | |             .expect("blockchain will not exceed 2^64 blocks; QED.");
    | |___________________________________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return
help: remove `return`
    |
102 ~         TryInto::try_into(<frame_system::Pallet<T>>::block_number())
103 +             .ok()
104 ~             .expect("blockchain will not exceed 2^64 blocks; QED.")
    |

warning: unneeded `return` statement
   --> pallets/subtensor/src/utils.rs:110:9
    |
110 |         return input.try_into().ok();
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return
help: remove `return`
    |
110 -         return input.try_into().ok();
110 +         input.try_into().ok()
    |

warning: unneeded `return` statement
   --> pallets/subtensor/src/utils.rs:117:9
    |
117 |         return Owner::<T>::get(hotkey);
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return
help: remove `return`
    |
117 -         return Owner::<T>::get(hotkey);
117 +         Owner::<T>::get(hotkey)
    |

warning: unneeded `return` statement
   --> pallets/subtensor/src/utils.rs:124:9
    |
124 |         return Owner::<T>::contains_key(hotkey);
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return
help: remove `return`
    |
124 -         return Owner::<T>::contains_key(hotkey);
124 +         Owner::<T>::contains_key(hotkey)
    |

warning: unneeded `return` statement
   --> pallets/subtensor/src/utils.rs:133:13
    |
133 |             return Owner::<T>::get(hotkey) == *coldkey;
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return
help: remove `return`
    |
133 -             return Owner::<T>::get(hotkey) == *coldkey;
133 +             Owner::<T>::get(hotkey) == *coldkey
    |

warning: unneeded `return` statement
   --> pallets/subtensor/src/utils.rs:137:13
    |
137 |             return false;
    |             ^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return
help: remove `return`
    |
137 -             return false;
137 +             false
    |

warning: unneeded `return` statement
   --> pallets/subtensor/src/utils.rs:145:9
    |
145 |         return Delegates::<T>::contains_key(hotkey);
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return
help: remove `return`
    |
145 -         return Delegates::<T>::contains_key(hotkey);
145 +         Delegates::<T>::contains_key(hotkey)
    |

warning: unneeded `return` statement
   --> pallets/subtensor/src/weights.rs:275:9
    |
275 |         return Ok(());
    |         ^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return
help: remove `return`
    |
275 -         return Ok(());
275 +         Ok(())
    |

warning: unneeded `return` statement
   --> pallets/subtensor/src/weights.rs:294:9
    |
294 |         return network_version_key == 0 || version_key >= network_version_key;
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return
help: remove `return`
    |
294 -         return network_version_key == 0 || version_key >= network_version_key;
294 +         network_version_key == 0 || version_key >= network_version_key
    |

warning: unneeded `return` statement
   --> pallets/subtensor/src/weights.rs:313:9
    |
313 |         return false;
    |         ^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return
help: remove `return`
    |
313 -         return false;
313 +         false
    |

warning: unneeded `return` statement
   --> pallets/subtensor/src/weights.rs:333:9
    |
333 |         return false;
    |         ^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return
help: remove `return`
    |
333 -         return false;
333 +         false
    |

warning: unneeded `return` statement
   --> pallets/subtensor/src/weights.rs:339:9
    |
339 |         return uids.len() == values.len();
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return
help: remove `return`
    |
339 -         return uids.len() == values.len();
339 +         uids.len() == values.len()
    |

warning: writing `&Vec` instead of `&[_]` involves a new object where a slice will do
   --> pallets/subtensor/src/weights.rs:337:36
    |
337 |     pub fn uids_match_values(uids: &Vec<u16>, values: &Vec<u16>) -> bool 
    |                                    ^^^^^^^^^ help: change this to: `&[u16]`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_arg

warning: writing `&Vec` instead of `&[_]` involves a new object where a slice will do
   --> pallets/subtensor/src/weights.rs:337:55
    |
337 |     pub fn uids_match_values(uids: &Vec<u16>, values: &Vec<u16>) -> bool 
    |                                                       ^^^^^^^^^ help: change this to: `&[u16]`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_arg

warning: unneeded `return` statement
   --> pallets/subtensor/src/weights.rs:355:9
    |
355 |         return false;
    |         ^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return
help: remove `return`
    |
355 -         return false;
355 +         false
    |

warning: this expression creates a reference which is immediately dereferenced by the compiler
   --> pallets/subtensor/src/weights.rs:347:32
    |
347 |             if parsed.contains(&item) 
    |                                ^^^^^ help: change this to: `item`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow

warning: using `clone` on type `u16` which implements the `Copy` trait
   --> pallets/subtensor/src/weights.rs:352:25
    |
352 |             parsed.push(item.clone());
    |                         ^^^^^^^^^^^^ help: try dereferencing it: `*item`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#clone_on_copy
    = note: `#[warn(clippy::clone_on_copy)]` on by default

warning: unneeded `return` statement
   --> pallets/subtensor/src/weights.rs:367:9
    |
367 |         return Self::get_validator_permit_for_uid(netuid, uid);
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return
help: remove `return`
    |
367 -         return Self::get_validator_permit_for_uid(netuid, uid);
367 +         Self::get_validator_permit_for_uid(netuid, uid)
    |

warning: unneeded `return` statement
   --> pallets/subtensor/src/weights.rs:399:9
    |
399 |         return false;
    |         ^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return
help: remove `return`
    |
399 -         return false;
399 +         false
    |

warning: unneeded `return` statement
   --> pallets/subtensor/src/weights.rs:415:9
    |
415 |         return weights;
    |         ^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return
help: remove `return`
    |
415 -         return weights;
415 +         weights
    |

warning: unneeded `return` statement
   --> pallets/subtensor/src/weights.rs:435:9
    |
435 |         return check_vec_max_limited(weights, max_weight_limit);
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return
help: remove `return`
    |
435 -         return check_vec_max_limited(weights, max_weight_limit);
435 +         check_vec_max_limited(weights, max_weight_limit)
    |

warning: unneeded `return` statement
   --> pallets/subtensor/src/weights.rs:451:9
    |
451 |         return true;
    |         ^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return
help: remove `return`
    |
451 -         return true;
451 +         true
    |

warning: writing `&Vec` instead of `&[_]` involves a new object where a slice will do
   --> pallets/subtensor/src/weights.rs:439:43
    |
439 |     pub fn is_self_weight(uid: u16, uids: &Vec<u16>, weights: &Vec<u16>) -> bool
    |                                           ^^^^^^^^^ help: change this to: `&[u16]`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_arg

warning: writing `&Vec` instead of `&[_]` involves a new object where a slice will do
   --> pallets/subtensor/src/weights.rs:439:63
    |
439 |     pub fn is_self_weight(uid: u16, uids: &Vec<u16>, weights: &Vec<u16>) -> bool
    |                                                               ^^^^^^^^^ help: change this to: `&[u16]`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_arg

warning: unneeded `return` statement
   --> pallets/subtensor/src/weights.rs:459:9
    |
459 |         return uids.len() <= subnetwork_n as usize;
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return
help: remove `return`
    |
459 -         return uids.len() <= subnetwork_n as usize;
459 +         uids.len() <= subnetwork_n as usize
    |

warning: writing `&Vec` instead of `&[_]` involves a new object where a slice will do
   --> pallets/subtensor/src/weights.rs:455:61
    |
455 |     pub fn check_len_uids_within_allowed(netuid: u16, uids: &Vec<u16>) -> bool 
    |                                                             ^^^^^^^^^ help: change this to: `&[u16]`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_arg

warning: unneeded `return` statement
   --> pallets/subtensor/src/weights.rs:464:9
    |
464 |         return WeightsVersionKey::<T>::get(netuid);
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return
help: remove `return`
    |
464 -         return WeightsVersionKey::<T>::get(netuid);
464 +         WeightsVersionKey::<T>::get(netuid)
    |

warning: unneeded `return` statement
   --> pallets/subtensor/src/weights.rs:488:9
    |
488 |         return MaxWeightsLimit::<T>::get(netuid);
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return
help: remove `return`
    |
488 -         return MaxWeightsLimit::<T>::get(netuid);
488 +         MaxWeightsLimit::<T>::get(netuid)
    |

warning: unneeded `return` statement
   --> pallets/subtensor/src/weights.rs:500:9
    |
500 |         return MinAllowedWeights::<T>::get(netuid);
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return
help: remove `return`
    |
500 -         return MinAllowedWeights::<T>::get(netuid);
500 +         MinAllowedWeights::<T>::get(netuid)
    |

warning: unneeded `return` statement
   --> pallets/subtensor/src/weights.rs:562:9
    |
562 |         return weights;
    |         ^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return
help: remove `return`
    |
562 -         return weights;
562 +         weights
    |

warning: unneeded `return` statement
   --> pallets/subtensor/src/weights.rs:581:9
    |
581 |         return weights;
    |         ^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return
help: remove `return`
    |
581 -         return weights;
581 +         weights
    |

warning: unneeded `return` statement
   --> pallets/subtensor/src/weights.rs:597:9
    |
597 |         return weights;
    |         ^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return
help: remove `return`
    |
597 -         return weights;
597 +         weights
    |

warning: this boolean expression can be simplified
  --> pallets/subtensor/src/delegate_info.rs:85:16
   |
85 |             if !_uid.is_ok() 
   |                ^^^^^^^^^^^^^ help: try: `_uid.is_err()`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#nonminimal_bool

warning: unneeded `return` statement
   --> pallets/subtensor/src/delegate_info.rs:142:9
    |
142 | /         return Some(
143 | |             Self::get_delegate_by_existing_account(delegate.clone())
144 | |         );
    | |_________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return
help: remove `return`
    |
142 ~         Some(
143 +             Self::get_delegate_by_existing_account(delegate.clone())
144 ~         )
    |

warning: unneeded `return` statement
   --> pallets/subtensor/src/delegate_info.rs:157:9
    |
157 |         return delegates;
    |         ^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return
help: remove `return`
    |
157 -         return delegates;
157 +         delegates
    |

warning: useless conversion to the same type: `frame_support::storage::KeyPrefixIterator<<T as frame_system::Config>::AccountId>`
   --> pallets/subtensor/src/delegate_info.rs:150:25
    |
150 |         for delegate in <Delegates<T> as IterableStorageMap<T::AccountId, u16>>::iter_keys().into_iter() 
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider removing `.into_iter()`: `<Delegates<T> as IterableStorageMap<T::AccountId, u16>>::iter_keys()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_conversion

warning: unneeded `return` statement
   --> pallets/subtensor/src/delegate_info.rs:187:9
    |
187 |         return delegates;
    |         ^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return
help: remove `return`
    |
187 -         return delegates;
187 +         delegates
    |

warning: useless conversion to the same type: `frame_support::storage::KeyPrefixIterator<<T as frame_system::Config>::AccountId>`
   --> pallets/subtensor/src/delegate_info.rs:172:25
    |
172 |         for delegate in < Delegates<T> as IterableStorageMap<T::AccountId, u16> >::iter_keys().into_iter() 
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider removing `.into_iter()`: `< Delegates<T> as IterableStorageMap<T::AccountId, u16> >::iter_keys()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_conversion

warning: unneeded `return` statement
   --> pallets/subtensor/src/neuron_info.rs:102:9
    |
102 |         return neurons;
    |         ^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return
help: remove `return`
    |
102 -         return neurons;
102 +         neurons
    |

warning: unneeded `return` statement
   --> pallets/subtensor/src/neuron_info.rs:141:9
    |
141 | /         return Some(NeuronInfo 
142 | |         {
143 | |             hotkey:             hotkey.clone(),
144 | |             coldkey:            coldkey.clone(),
...   |
162 | |             pruning_score:      pruning_score.into()
163 | |         });
    | |__________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return
help: remove `return`
    |
141 ~         Some(NeuronInfo 
142 +         {
143 +             hotkey:             hotkey.clone(),
144 +             coldkey:            coldkey.clone(),
145 +             uid:                uid.into(),
146 +             netuid:             netuid.into(),
147 +             active,
148 +             axon_info,
149 +             prometheus_info,
150 +             stake,
151 +             rank:               rank.into(),
152 +             emission:           emission.into(),
153 +             incentive:          incentive.into(),
154 +             consensus:          consensus.into(),
155 +             trust:              trust.into(),
156 +             validator_trust:    validator_trust.into(),
157 +             dividends:          dividends.into(),
158 +             last_update:        last_update.into(),
159 +             validator_permit,
160 +             weights,
161 +             bonds,
162 +             pruning_score:      pruning_score.into()
163 ~         })
    |

warning: casting to the same type is unnecessary (`u16` -> `u16`)
   --> pallets/subtensor/src/neuron_info.rs:117:85
    |
117 |         let active:             bool            = Self::get_active_for_uid( netuid, uid as u16 );
    |                                                                                     ^^^^^^^^^^ help: try: `uid`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast

warning: casting to the same type is unnecessary (`u16` -> `u16`)
   --> pallets/subtensor/src/neuron_info.rs:118:83
    |
118 |         let rank:               u16             = Self::get_rank_for_uid( netuid, uid as u16 );
    |                                                                                   ^^^^^^^^^^ help: try: `uid`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast

warning: casting to the same type is unnecessary (`u16` -> `u16`)
   --> pallets/subtensor/src/neuron_info.rs:119:87
    |
119 |         let emission:           u64             = Self::get_emission_for_uid( netuid, uid as u16 );
    |                                                                                       ^^^^^^^^^^ help: try: `uid`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast

warning: casting to the same type is unnecessary (`u16` -> `u16`)
   --> pallets/subtensor/src/neuron_info.rs:120:88
    |
120 |         let incentive:          u16             = Self::get_incentive_for_uid( netuid, uid as u16 );
    |                                                                                        ^^^^^^^^^^ help: try: `uid`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast

warning: casting to the same type is unnecessary (`u16` -> `u16`)
   --> pallets/subtensor/src/neuron_info.rs:121:88
    |
121 |         let consensus:          u16             = Self::get_consensus_for_uid( netuid, uid as u16 );
    |                                                                                        ^^^^^^^^^^ help: try: `uid`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast

warning: casting to the same type is unnecessary (`u16` -> `u16`)
   --> pallets/subtensor/src/neuron_info.rs:122:84
    |
122 |         let trust:              u16             = Self::get_trust_for_uid( netuid, uid as u16 );
    |                                                                                    ^^^^^^^^^^ help: try: `uid`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast

warning: casting to the same type is unnecessary (`u16` -> `u16`)
   --> pallets/subtensor/src/neuron_info.rs:123:94
    |
123 |         let validator_trust:    u16             = Self::get_validator_trust_for_uid( netuid, uid as u16 );
    |                                                                                              ^^^^^^^^^^ help: try: `uid`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast

warning: casting to the same type is unnecessary (`u16` -> `u16`)
   --> pallets/subtensor/src/neuron_info.rs:124:88
    |
124 |         let dividends:          u16             = Self::get_dividends_for_uid( netuid, uid as u16 );
    |                                                                                        ^^^^^^^^^^ help: try: `uid`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast

warning: casting to the same type is unnecessary (`u16` -> `u16`)
   --> pallets/subtensor/src/neuron_info.rs:125:92
    |
125 |         let pruning_score:      u16             = Self::get_pruning_score_for_uid( netuid, uid as u16 );
    |                                                                                            ^^^^^^^^^^ help: try: `uid`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast

warning: casting to the same type is unnecessary (`u16` -> `u16`)
   --> pallets/subtensor/src/neuron_info.rs:126:90
    |
126 |         let last_update:        u64             = Self::get_last_update_for_uid( netuid, uid as u16 );
    |                                                                                          ^^^^^^^^^^ help: try: `uid`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast

warning: casting to the same type is unnecessary (`u16` -> `u16`)
   --> pallets/subtensor/src/neuron_info.rs:127:95
    |
127 |         let validator_permit:   bool            = Self::get_validator_permit_for_uid( netuid, uid as u16 );
    |                                                                                               ^^^^^^^^^^ help: try: `uid`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast

warning: unneeded `return` statement
   --> pallets/subtensor/src/neuron_info.rs:173:9
    |
173 |         return Self::get_neuron_subnet_exists(netuid, uid);
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return
help: remove `return`
    |
173 -         return Self::get_neuron_subnet_exists(netuid, uid);
173 +         Self::get_neuron_subnet_exists(netuid, uid)
    |

warning: unneeded `return` statement
   --> pallets/subtensor/src/neuron_info.rs:203:9
    |
203 | /         return Some(NeuronInfoLite
204 | |         {
205 | |             hotkey:             hotkey.clone(),
206 | |             coldkey:            coldkey.clone(),
...   |
222 | |             pruning_score:      pruning_score.into()
223 | |         });
    | |__________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return
help: remove `return`
    |
203 ~         Some(NeuronInfoLite
204 +         {
205 +             hotkey:             hotkey.clone(),
206 +             coldkey:            coldkey.clone(),
207 +             uid:                uid.into(),
208 +             netuid:             netuid.into(),
209 +             active,
210 +             axon_info,
211 +             prometheus_info,
212 +             stake,
213 +             rank:               rank.into(),
214 +             emission:           emission.into(),
215 +             incentive:          incentive.into(),
216 +             consensus:          consensus.into(),
217 +             trust:              trust.into(),
218 +             validator_trust:    validator_trust.into(),
219 +             dividends:          dividends.into(),
220 +             last_update:        last_update.into(),
221 +             validator_permit,
222 +             pruning_score:      pruning_score.into()
223 ~         })
    |

warning: casting to the same type is unnecessary (`u16` -> `u16`)
   --> pallets/subtensor/src/neuron_info.rs:187:85
    |
187 |         let active:             bool            = Self::get_active_for_uid( netuid, uid as u16 );
    |                                                                                     ^^^^^^^^^^ help: try: `uid`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast

warning: casting to the same type is unnecessary (`u16` -> `u16`)
   --> pallets/subtensor/src/neuron_info.rs:188:83
    |
188 |         let rank:               u16             = Self::get_rank_for_uid( netuid, uid as u16 );
    |                                                                                   ^^^^^^^^^^ help: try: `uid`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast

warning: casting to the same type is unnecessary (`u16` -> `u16`)
   --> pallets/subtensor/src/neuron_info.rs:189:87
    |
189 |         let emission:           u64             = Self::get_emission_for_uid( netuid, uid as u16 );
    |                                                                                       ^^^^^^^^^^ help: try: `uid`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast

warning: casting to the same type is unnecessary (`u16` -> `u16`)
   --> pallets/subtensor/src/neuron_info.rs:190:88
    |
190 |         let incentive:          u16             = Self::get_incentive_for_uid( netuid, uid as u16 );
    |                                                                                        ^^^^^^^^^^ help: try: `uid`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast

warning: casting to the same type is unnecessary (`u16` -> `u16`)
   --> pallets/subtensor/src/neuron_info.rs:191:88
    |
191 |         let consensus:          u16             = Self::get_consensus_for_uid( netuid, uid as u16 );
    |                                                                                        ^^^^^^^^^^ help: try: `uid`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast

warning: casting to the same type is unnecessary (`u16` -> `u16`)
   --> pallets/subtensor/src/neuron_info.rs:192:84
    |
192 |         let trust:              u16             = Self::get_trust_for_uid( netuid, uid as u16 );
    |                                                                                    ^^^^^^^^^^ help: try: `uid`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast

warning: casting to the same type is unnecessary (`u16` -> `u16`)
   --> pallets/subtensor/src/neuron_info.rs:193:94
    |
193 |         let validator_trust:    u16             = Self::get_validator_trust_for_uid( netuid, uid as u16 );
    |                                                                                              ^^^^^^^^^^ help: try: `uid`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast

warning: casting to the same type is unnecessary (`u16` -> `u16`)
   --> pallets/subtensor/src/neuron_info.rs:194:88
    |
194 |         let dividends:          u16             = Self::get_dividends_for_uid( netuid, uid as u16 );
    |                                                                                        ^^^^^^^^^^ help: try: `uid`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast

warning: casting to the same type is unnecessary (`u16` -> `u16`)
   --> pallets/subtensor/src/neuron_info.rs:195:92
    |
195 |         let pruning_score:      u16             = Self::get_pruning_score_for_uid( netuid, uid as u16 );
    |                                                                                            ^^^^^^^^^^ help: try: `uid`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast

warning: casting to the same type is unnecessary (`u16` -> `u16`)
   --> pallets/subtensor/src/neuron_info.rs:196:90
    |
196 |         let last_update:        u64             = Self::get_last_update_for_uid( netuid, uid as u16 );
    |                                                                                          ^^^^^^^^^^ help: try: `uid`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast

warning: casting to the same type is unnecessary (`u16` -> `u16`)
   --> pallets/subtensor/src/neuron_info.rs:197:95
    |
197 |         let validator_permit:   bool            = Self::get_validator_permit_for_uid( netuid, uid as u16 );
    |                                                                                               ^^^^^^^^^^ help: try: `uid`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast

warning: unneeded `return` statement
   --> pallets/subtensor/src/neuron_info.rs:246:9
    |
246 |         return neurons;
    |         ^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return
help: remove `return`
    |
246 -         return neurons;
246 +         neurons
    |

warning: unneeded `return` statement
   --> pallets/subtensor/src/neuron_info.rs:256:9
    |
256 |         return Self::get_neuron_lite_subnet_exists(netuid, uid);
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return
help: remove `return`
    |
256 -         return Self::get_neuron_lite_subnet_exists(netuid, uid);
256 +         Self::get_neuron_lite_subnet_exists(netuid, uid)
    |

warning: unneeded `return` statement
  --> pallets/subtensor/src/stake_info.rs:74:9
   |
74 |         return stake_info;
   |         ^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return
help: remove `return`
   |
74 -         return stake_info;
74 +         stake_info
   |

warning: length comparison to zero
  --> pallets/subtensor/src/stake_info.rs:48:12
   |
48 |         if coldkeys.len() == 0 
   |            ^^^^^^^^^^^^^^^^^^^ help: using `is_empty` is clearer and more explicit: `coldkeys.is_empty()`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#len_zero

warning: unneeded `return` statement
  --> pallets/subtensor/src/stake_info.rs:95:9
   |
95 |         return Self::_get_stake_info_for_coldkeys(coldkeys);
   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return
help: remove `return`
   |
95 -         return Self::_get_stake_info_for_coldkeys(coldkeys);
95 +         Self::_get_stake_info_for_coldkeys(coldkeys)
   |

warning: length comparison to zero
  --> pallets/subtensor/src/stake_info.rs:90:12
   |
90 |         if coldkeys.len() == 0 
   |            ^^^^^^^^^^^^^^^^^^^ help: using `is_empty` is clearer and more explicit: `coldkeys.is_empty()`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#len_zero

warning: unneeded `return` statement
   --> pallets/subtensor/src/stake_info.rs:109:13
    |
109 |             return Vec::new(); // Invalid coldkey
    |             ^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return
help: remove `return`
    |
109 -             return Vec::new(); // Invalid coldkey
109 +             Vec::new()// Invalid coldkey
    |

warning: length comparison to zero
   --> pallets/subtensor/src/stake_info.rs:107:12
    |
107 |         if stake_info.len() == 0 
    |            ^^^^^^^^^^^^^^^^^^^^^ help: using `is_empty` is clearer and more explicit: `stake_info.is_empty()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#len_zero

warning: accessing first element with `stake_info.get(0)`
   --> pallets/subtensor/src/stake_info.rs:113:20
    |
113 |             return stake_info.get(0).unwrap().1.clone();
    |                    ^^^^^^^^^^^^^^^^^ help: try: `stake_info.first()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#get_first
    = note: `#[warn(clippy::get_first)]` on by default

warning: unneeded `return` statement
   --> pallets/subtensor/src/subnet_info.rs:111:9
    |
111 | /         return Some(SubnetInfo 
112 | |         {
113 | |             rho:                    rho.into(),
114 | |             kappa:                  kappa.into(),
...   |
130 | |             owner:                  Self::get_subnet_owner(netuid).into(),
131 | |         });
    | |__________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return
help: remove `return`
    |
111 ~         Some(SubnetInfo 
112 +         {
113 +             rho:                    rho.into(),
114 +             kappa:                  kappa.into(),
115 +             difficulty:             difficulty.into(),
116 +             immunity_period:        immunity_period.into(),
117 +             netuid:                 netuid.into(),
118 +             max_allowed_validators: max_allowed_validators.into(),
119 +             min_allowed_weights:    min_allowed_weights.into(),
120 +             max_weights_limit:      max_weights_limit.into(),
121 +             scaling_law_power:      scaling_law_power.into(),
122 +             subnetwork_n:           subnetwork_n.into(),
123 +             max_allowed_uids:       max_allowed_uids.into(),
124 +             blocks_since_last_step: blocks_since_last_step.into(),
125 +             tempo:                  tempo.into(),
126 +             network_modality:       network_modality.into(),
127 +             network_connect,
128 +             emission_values:        emission_values.into(),
129 +             burn,
130 +             owner:                  Self::get_subnet_owner(netuid).into(),
131 ~         })
    |

warning: useless conversion to the same type: `<T as frame_system::Config>::AccountId`
   --> pallets/subtensor/src/subnet_info.rs:130:37
    |
130 |             owner:                  Self::get_subnet_owner(netuid).into(),
    |                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider removing `.into()`: `Self::get_subnet_owner(netuid)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_conversion

warning: unneeded `return` statement
   --> pallets/subtensor/src/subnet_info.rs:160:9
    |
160 |         return subnets_info;
    |         ^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return
help: remove `return`
    |
160 -         return subnets_info;
160 +         subnets_info
    |

warning: unneeded `return` statement
   --> pallets/subtensor/src/subnet_info.rs:192:9
    |
192 | /         return Some(SubnetHyperparams 
193 | |         {
194 | |             rho:                        rho.into(),
195 | |             kappa:                      kappa.into(),
...   |
213 | |             max_validators:             max_validators.into()
214 | |         });
    | |__________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return
help: remove `return`
    |
192 ~         Some(SubnetHyperparams 
193 +         {
194 +             rho:                        rho.into(),
195 +             kappa:                      kappa.into(),
196 +             immunity_period:            immunity_period.into(),
197 +             min_allowed_weights:        min_allowed_weights.into(),
198 +             max_weights_limit:          max_weights_limit.into(),
199 +             tempo:                      tempo.into(),
200 +             min_difficulty:             min_difficulty.into(),
201 +             max_difficulty:             max_difficulty.into(),
202 +             weights_version:            weights_version.into(),
203 +             weights_rate_limit:         weights_rate_limit.into(),
204 +             adjustment_interval:        adjustment_interval.into(),
205 +             activity_cutoff:            activity_cutoff.into(),
206 +             registration_allowed,
207 +             target_regs_per_interval:   target_regs_per_interval.into(),
208 +             min_burn:                   min_burn.into(),
209 +             max_burn:                   max_burn.into(),
210 +             bonds_moving_avg:           bonds_moving_avg.into(),
211 +             max_regs_per_block:         max_regs_per_block.into(),
212 +             serving_rate_limit:         serving_rate_limit.into(),
213 +             max_validators:             max_validators.into()
214 ~         })
    |

warning: redundant pattern matching, consider using `is_err()`
   --> pallets/subtensor/src/migration.rs:302:20
    |
302 |             if let Err(_) = old::LoadedEmission::<T>::try_get(netuid) {
    |             -------^^^^^^-------------------------------------------- help: try: `if old::LoadedEmission::<T>::try_get(netuid).is_err()`
    |
    = note: this will change drop order of the result, as well as all temporaries
    = note: add `#[allow(clippy::redundant_pattern_matching)]` if this is important
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#redundant_pattern_matching
    = note: `#[warn(clippy::redundant_pattern_matching)]` on by default

warning: casting integer literal to `u64` is unnecessary
   --> pallets/subtensor/src/migration.rs:326:56
    |
326 |                     new_netuid_emissions.push((server, 0 as u64, validator_emission));
    |                                                        ^^^^^^^^ help: try: `0_u64`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast

warning: unneeded `return` statement
   --> pallets/subtensor/src/lib.rs:408:9
    |
408 |         return GlobalDefaultMinBurn::<T>::get();
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return
help: remove `return`
    |
408 -         return GlobalDefaultMinBurn::<T>::get();
408 +         GlobalDefaultMinBurn::<T>::get()
    |

warning: unneeded `return` statement
   --> pallets/subtensor/src/lib.rs:423:9
    |
423 |         return GlobalDefaultMinDifficulty::<T>::get();
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return
help: remove `return`
    |
423 -         return GlobalDefaultMinDifficulty::<T>::get();
423 +         GlobalDefaultMinDifficulty::<T>::get()
    |

warning: unneeded `return` statement
   --> pallets/subtensor/src/lib.rs:435:8
    |
435 |        return GlobalDefaultMaxDifficulty::<T>::get();
    |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return
help: remove `return`
    |
435 -        return GlobalDefaultMaxDifficulty::<T>::get();
435 +        GlobalDefaultMaxDifficulty::<T>::get()
    |

warning: unneeded `return` statement
   --> pallets/subtensor/src/lib.rs:480:9
    |
480 |         return T::InitialNetworkRegistrationAllowed::get();
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return
help: remove `return`
    |
480 -         return T::InitialNetworkRegistrationAllowed::get();
480 +         T::InitialNetworkRegistrationAllowed::get()
    |

warning: unneeded `return` statement
   --> pallets/subtensor/src/lib.rs:556:9
    |
556 |         return GlobalSubnetDefaultNetworkRegistrationAllowed::<T>::get();
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return
help: remove `return`
    |
556 -         return GlobalSubnetDefaultNetworkRegistrationAllowed::<T>::get();
556 +         GlobalSubnetDefaultNetworkRegistrationAllowed::<T>::get()
    |

warning: unneeded `return` statement
   --> pallets/subtensor/src/lib.rs:575:9
    |
575 |         return GlobalDefaultNetworkImmunityPeriod::<T>::get();
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return
help: remove `return`
    |
575 -         return GlobalDefaultNetworkImmunityPeriod::<T>::get();
575 +         GlobalDefaultNetworkImmunityPeriod::<T>::get()
    |

warning: unneeded `return` statement
   --> pallets/subtensor/src/lib.rs:817:9
    |
817 |         return GlobalMaxAllowedUids::<T>::get();
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return
help: remove `return`
    |
817 -         return GlobalMaxAllowedUids::<T>::get();
817 +         GlobalMaxAllowedUids::<T>::get()
    |

warning: unneeded `return` statement
   --> pallets/subtensor/src/lib.rs:829:9
    |
829 |         return GlobalDefaultImmunityPeriod::<T>::get();
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return
help: remove `return`
    |
829 -         return GlobalDefaultImmunityPeriod::<T>::get();
829 +         GlobalDefaultImmunityPeriod::<T>::get()
    |

warning: unneeded `return` statement
   --> pallets/subtensor/src/lib.rs:851:9
    |
851 |         return GlobalDefaultMinAllowedWeights::<T>::get();
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return
help: remove `return`
    |
851 -         return GlobalDefaultMinAllowedWeights::<T>::get();
851 +         GlobalDefaultMinAllowedWeights::<T>::get()
    |

warning: unneeded `return` statement
   --> pallets/subtensor/src/lib.rs:863:9
    |
863 |         return GlobalDefaultMaxWeightLimit::<T>::get();
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return
help: remove `return`
    |
863 -         return GlobalDefaultMaxWeightLimit::<T>::get();
863 +         GlobalDefaultMaxWeightLimit::<T>::get()
    |

warning: unneeded `return` statement
   --> pallets/subtensor/src/lib.rs:875:9
    |
875 |         return GlobalDefaultMaxAllowedValidators::<T>::get();
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return
help: remove `return`
    |
875 -         return GlobalDefaultMaxAllowedValidators::<T>::get();
875 +         GlobalDefaultMaxAllowedValidators::<T>::get()
    |

warning: unneeded `return` statement
   --> pallets/subtensor/src/lib.rs:887:9
    |
887 |         return GlobalDefaultAdjustmentInterval::<T>::get();
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return
help: remove `return`
    |
887 -         return GlobalDefaultAdjustmentInterval::<T>::get();
887 +         GlobalDefaultAdjustmentInterval::<T>::get()
    |

warning: unneeded `return` statement
   --> pallets/subtensor/src/lib.rs:912:9
    |
912 |         return GlobalDefaultTargetRegistrationsPerInterval::<T>::get();
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return
help: remove `return`
    |
912 -         return GlobalDefaultTargetRegistrationsPerInterval::<T>::get();
912 +         GlobalDefaultTargetRegistrationsPerInterval::<T>::get()
    |

warning: unneeded `return` statement
   --> pallets/subtensor/src/lib.rs:936:9
    |
936 |         return GlobalDefaultAdjustmentAlpha::<T>::get();
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return
help: remove `return`
    |
936 -         return GlobalDefaultAdjustmentAlpha::<T>::get();
936 +         GlobalDefaultAdjustmentAlpha::<T>::get()
    |

warning: very complex type used. Consider factoring parts into `type` definitions
    --> pallets/subtensor/src/lib.rs:1164:21
     |
1164 |         pub stakes: Vec<(T::AccountId, Vec<(T::AccountId, (u64, u16))>)>,
     |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#type_complexity
     = note: `#[warn(clippy::type_complexity)]` on by default

warning: unneeded `return` statement
    --> pallets/subtensor/src/lib.rs:1341:21
     |
1341 | /                     return Weight::from_parts(110_634_229_000 as u64, 0)
1342 | |                         .saturating_add(T::DbWeight::get().reads(8304 as u64))
1343 | |                         .saturating_add(T::DbWeight::get().writes(110 as u64));
     | |______________________________________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return
help: remove `return`
     |
1341 ~                     Weight::from_parts(110_634_229_000 as u64, 0)
1342 +                         .saturating_add(T::DbWeight::get().reads(8304 as u64))
1343 ~                         .saturating_add(T::DbWeight::get().writes(110 as u64))
     |

warning: unneeded `return` statement
    --> pallets/subtensor/src/lib.rs:1348:21
     |
1348 | /                     return Weight::from_parts(110_634_229_000 as u64, 0)
1349 | |                         .saturating_add(T::DbWeight::get().reads(8304 as u64))
1350 | |                         .saturating_add(T::DbWeight::get().writes(110 as u64));
     | |______________________________________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return
help: remove `return`
     |
1348 ~                     Weight::from_parts(110_634_229_000 as u64, 0)
1349 +                         .saturating_add(T::DbWeight::get().reads(8304 as u64))
1350 ~                         .saturating_add(T::DbWeight::get().writes(110 as u64))
     |

warning: casting integer literal to `u64` is unnecessary
    --> pallets/subtensor/src/lib.rs:1341:47
     |
1341 |                     return Weight::from_parts(110_634_229_000 as u64, 0)
     |                                               ^^^^^^^^^^^^^^^^^^^^^^ help: try: `110_634_229_000_u64`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast

warning: casting integer literal to `u64` is unnecessary
    --> pallets/subtensor/src/lib.rs:1342:66
     |
1342 |                         .saturating_add(T::DbWeight::get().reads(8304 as u64))
     |                                                                  ^^^^^^^^^^^ help: try: `8304_u64`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast

warning: casting integer literal to `u64` is unnecessary
    --> pallets/subtensor/src/lib.rs:1343:67
     |
1343 |                         .saturating_add(T::DbWeight::get().writes(110 as u64));
     |                                                                   ^^^^^^^^^^ help: try: `110_u64`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast

warning: casting integer literal to `u64` is unnecessary
    --> pallets/subtensor/src/lib.rs:1348:47
     |
1348 |                     return Weight::from_parts(110_634_229_000 as u64, 0)
     |                                               ^^^^^^^^^^^^^^^^^^^^^^ help: try: `110_634_229_000_u64`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast

warning: casting integer literal to `u64` is unnecessary
    --> pallets/subtensor/src/lib.rs:1349:66
     |
1349 |                         .saturating_add(T::DbWeight::get().reads(8304 as u64))
     |                                                                  ^^^^^^^^^^^ help: try: `8304_u64`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast

warning: casting integer literal to `u64` is unnecessary
    --> pallets/subtensor/src/lib.rs:1350:67
     |
1350 |                         .saturating_add(T::DbWeight::get().writes(110 as u64));
     |                                                                   ^^^^^^^^^^ help: try: `110_u64`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast

warning: unneeded `return` statement
    --> pallets/subtensor/src/lib.rs:1371:13
     |
1371 |             return weight;
     |             ^^^^^^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return
help: remove `return`
     |
1371 -             return weight;
1371 +             weight
     |

warning: this function has too many arguments (9/7)
    --> pallets/subtensor/src/lib.rs:104:1
     |
104  |   #[frame_support::pallet]
     |   ^-----------------------
     |   |
     |  _in this procedural macro expansion
     | |
105  | | pub mod pallet
106  | | {
107  | |     #[cfg(feature = "std")]
...    |
1630 | |             placeholder2: u8,
1631 | |         ) -> DispatchResult {
     | |___________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#too_many_arguments
     = note: this warning originates in the attribute macro `frame_support::pallet` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: unneeded `return` statement
    --> pallets/subtensor/src/lib.rs:1848:13
     |
1848 |             return 0;
     |             ^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return
help: remove `return`
     |
1848 -             return 0;
1848 +             0
     |

warning: the borrowed expression implements the required traits
    --> pallets/subtensor/src/lib.rs:1841:48
     |
1841 |             if Uids::<T>::contains_key(netuid, &hotkey) {
     |                                                ^^^^^^^ help: change this to: `hotkey`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrows_for_generic_args

warning: casting to the same type is unnecessary (`u16` -> `u16`)
    --> pallets/subtensor/src/lib.rs:1845:82
     |
1845 |                     current_block_number - Self::get_last_update_for_uid(netuid, uid as u16);
     |                                                                                  ^^^^^^^^^^ help: try: `uid`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast

warning: this let-binding has unit value
    --> pallets/subtensor/src/lib.rs:1795:13
     |
1795 |             _weight: Weight,
     |             ^^^^^^^ help: omit the `let` binding: `_weight;`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_unit_value
     = note: `#[warn(clippy::let_unit_value)]` on by default

warning: this function has too many arguments (8/7)
    --> pallets/subtensor/src/lib.rs:1378:15
     |
1378 |     #[pallet::call]
     |               ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#too_many_arguments

warning: this `impl` can be derived
    --> pallets/subtensor/src/lib.rs:1867:1
     |
1867 | / impl Default for CallType {
1868 | |     fn default() -> Self {
1869 | |         CallType::Other
1870 | |     }
1871 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#derivable_impls
     = note: `#[warn(clippy::derivable_impls)]` on by default
     = help: remove the manual implementation...
help: ...and instead derive it...
     |
1857 + #[derive(Default)]
1858 | pub enum CallType {
     |
help: ...and mark the default variant
     |
1865 ~     #[default]
1866 ~     Other,
     |

warning: you should consider adding a `Default` implementation for `SubtensorSignedExtension<T>`
    --> pallets/subtensor/src/lib.rs:1881:5
     |
1881 | /     pub fn new() -> Self {
1882 | |         Self(Default::default())
1883 | |     }
     | |_____^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default
     = note: `#[warn(clippy::new_without_default)]` on by default
help: try adding this
     |
1876 + impl<T: Config + Send + Sync + TypeInfo> Default for SubtensorSignedExtension<T>
1877 + where
1878 +     T::RuntimeCall: Dispatchable<Info = DispatchInfo, PostInfo = PostDispatchInfo>,
1879 +     <T as frame_system::Config>::RuntimeCall: IsSubType<Call<T>>,
1880 +  {
1881 +     fn default() -> Self {
1882 +         Self::new()
1883 +     }
1884 + }
     |

warning: unneeded `return` statement
    --> pallets/subtensor/src/lib.rs:1888:9
     |
1888 |         return u64::max_value();
     |         ^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return
help: remove `return`
     |
1888 -         return u64::max_value();
1888 +         u64::max_value()
     |

warning: unneeded `return` statement
    --> pallets/subtensor/src/lib.rs:1894:9
     |
1894 |         return Pallet::<T>::get_priority_set_weights(who, netuid);
     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return
help: remove `return`
     |
1894 -         return Pallet::<T>::get_priority_set_weights(who, netuid);
1894 +         Pallet::<T>::get_priority_set_weights(who, netuid)
     |

warning: unused implementer of `frame_support::traits::Imbalance` that must be used
 --> pallets/subtensor/src/balance.rs:5:9
  |
5 |         T::Currency::deposit_creating(&coldkey, amount); // Infallibe
  |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_must_use)]` on by default

warning: `pallet-subtensor` (lib) generated 498 warnings
error: could not compile `pallet-subtensor` (lib) due to 2 previous errors; 498 warnings emitted
